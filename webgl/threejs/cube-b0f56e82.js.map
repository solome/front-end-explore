{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/threejs/controls/OrbitControls.ts","webpack:///./src/threejs/cube.page.ts"],"names":["webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","executeModules","i","resolves","length","installedChunks","push","Object","prototype","hasOwnProperty","call","modules","parentJsonpFunction","shift","deferredModules","apply","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","installedModules","3","exports","module","l","m","c","d","name","getter","o","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","p","jsonpArray","window","oldJsonpFunction","slice","THREE","OrbitControls","domElement","offset","quat","quatInverse","lastPosition","lastQuaternion","this","undefined","document","enabled","target","Vector3","minDistance","maxDistance","Infinity","minZoom","maxZoom","minPolarAngle","maxPolarAngle","Math","PI","minAzimuthAngle","maxAzimuthAngle","enableDamping","dampingFactor","enableZoom","zoomSpeed","enableRotate","rotateSpeed","enablePan","panSpeed","screenSpacePanning","keyPanSpeed","autoRotate","autoRotateSpeed","enableKeys","keys","LEFT","UP","RIGHT","BOTTOM","mouseButtons","MOUSE","MIDDLE","target0","clone","position0","position","zoom0","zoom","getPolarAngle","spherical","phi","getAzimuthalAngle","theta","saveState","scope","copy","reset","updateProjectionMatrix","dispatchEvent","changeEvent","update","state","STATE","NONE","Quaternion","setFromUnitVectors","up","inverse","sub","applyQuaternion","setFromVector3","rotateLeft","sphericalDelta","max","min","makeSafe","radius","scale","add","panOffset","setFromSpherical","lookAt","multiplyScalar","set","zoomChanged","distanceToSquared","EPS","dot","quaternion","dispose","removeEventListener","onContextMenu","onMouseDown","onMouseWheel","onTouchStart","onTouchEnd","onTouchMove","onMouseMove","onMouseUp","onKeyDown","type","startEvent","endEvent","ROTATE","DOLLY","PAN","TOUCH_ROTATE","TOUCH_DOLLY_PAN","Spherical","rotateStart","Vector2","rotateEnd","rotateDelta","panStart","panEnd","panDelta","dollyStart","dollyEnd","dollyDelta","getZoomScale","pow","angle","rotateUp","v","panLeft","distance","objectMatrix","setFromMatrixColumn","panUp","crossVectors","pan","deltaX","deltaY","element","body","isPerspectiveCamera","targetDistance","tan","fov","clientHeight","matrix","isOrthographicCamera","right","left","clientWidth","top","bottom","console","warn","dollyIn","dollyScale","dollyOut","handleMouseDownPan","event","clientX","clientY","preventDefault","focus","button","ctrlKey","metaKey","shiftKey","handleMouseDownRotate","handleMouseDownDolly","addEventListener","subVectors","x","y","handleMouseMoveRotate","handleMouseMoveDolly","handleMouseMovePan","stopPropagation","handleMouseWheel","needsUpdate","keyCode","handleKeyDown","touches","pageX","pageY","handleTouchStartRotate","dx","dy","sqrt","handleTouchStartDollyPan","handleTouchMoveRotate","handleTouchMoveDollyPan","EventDispatcher","constructor","defineProperties","center","noZoom","noRotate","noPan","noKeys","staticMoving","dynamicDampingFactor","orbitControls","camera","renderer","scene","controls","animate","requestAnimationFrame","render","resize","width","offsetWidth","height","offsetHeight","setSize","aspect","default","OrbitControls_1","__global__","Scene","PerspectiveCamera","innerWidth","innerHeight","WebGLRenderer","canvas","querySelector","setClearColor","shadowMap","appendChild","planeGeometry","PlaneGeometry","planeMaterial","MeshLambertMaterial","color","plane","Mesh","receiveShadow","rotation","z","ambientLight","AmbientLight","spotLight","SpotLight","castShadow","addCube","cubeSize","ceil","random","cubeGeometry","BoxGeometry","cubeMaterial","cube","children","round"],"mappings":"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","file":"threejs/cube-b0f56e82.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t3: 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"//solome.js.org/front-end-explore/webgl\";\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([12,0]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","\"use strict\";\n/**\n * @author qiao / https://github.com/qiao\n * @author mrdoob / http://mrdoob.com\n * @author alteredq / http://alteredqualia.com/\n * @author WestLangley / http://github.com/WestLangley\n * @author erich666 / http://erichaines.com\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\n// This set of controls performs orbiting, dollying (zooming), and panning.\n// Unlike TrackballControls, it maintains the \"up\" direction object.up (+Y by default).\n//\n//    Orbit - left mouse / touch: one-finger move\n//    Zoom - middle mouse, or mousewheel / touch: two-finger spread or squish\n//    Pan - right mouse, or left mouse + ctrl/meta/shiftKey, or arrow keys / touch: two-finger move\nvar THREE = require(\"three\");\nvar OrbitControls = function (object, domElement) {\n    this.object = object;\n    this.domElement = (domElement !== undefined) ? domElement : document;\n    // Set to false to disable this control\n    this.enabled = true;\n    // \"target\" sets the location of focus, where the object orbits around\n    this.target = new THREE.Vector3();\n    // How far you can dolly in and out ( PerspectiveCamera only )\n    this.minDistance = 0;\n    this.maxDistance = Infinity;\n    // How far you can zoom in and out ( OrthographicCamera only )\n    this.minZoom = 0;\n    this.maxZoom = Infinity;\n    // How far you can orbit vertically, upper and lower limits.\n    // Range is 0 to Math.PI radians.\n    this.minPolarAngle = 0; // radians\n    this.maxPolarAngle = Math.PI; // radians\n    // How far you can orbit horizontally, upper and lower limits.\n    // If set, must be a sub-interval of the interval [ - Math.PI, Math.PI ].\n    this.minAzimuthAngle = -Infinity; // radians\n    this.maxAzimuthAngle = Infinity; // radians\n    // Set to true to enable damping (inertia)\n    // If damping is enabled, you must call controls.update() in your animation loop\n    this.enableDamping = false;\n    this.dampingFactor = 0.25;\n    // This option actually enables dollying in and out; left as \"zoom\" for backwards compatibility.\n    // Set to false to disable zooming\n    this.enableZoom = true;\n    this.zoomSpeed = 1.0;\n    // Set to false to disable rotating\n    this.enableRotate = true;\n    this.rotateSpeed = 1.0;\n    // Set to false to disable panning\n    this.enablePan = true;\n    this.panSpeed = 1.0;\n    this.screenSpacePanning = false; // if true, pan in screen-space\n    this.keyPanSpeed = 7.0; // pixels moved per arrow key push\n    // Set to true to automatically rotate around the target\n    // If auto-rotate is enabled, you must call controls.update() in your animation loop\n    this.autoRotate = false;\n    this.autoRotateSpeed = 2.0; // 30 seconds per round when fps is 60\n    // Set to false to disable use of the keys\n    this.enableKeys = true;\n    // The four arrow keys\n    this.keys = { LEFT: 37, UP: 38, RIGHT: 39, BOTTOM: 40 };\n    // Mouse buttons\n    this.mouseButtons = { LEFT: THREE.MOUSE.LEFT, MIDDLE: THREE.MOUSE.MIDDLE, RIGHT: THREE.MOUSE.RIGHT };\n    // for reset\n    this.target0 = this.target.clone();\n    this.position0 = this.object.position.clone();\n    this.zoom0 = this.object.zoom;\n    //\n    // public methods\n    //\n    this.getPolarAngle = function () {\n        return spherical.phi;\n    };\n    this.getAzimuthalAngle = function () {\n        return spherical.theta;\n    };\n    this.saveState = function () {\n        scope.target0.copy(scope.target);\n        scope.position0.copy(scope.object.position);\n        scope.zoom0 = scope.object.zoom;\n    };\n    this.reset = function () {\n        scope.target.copy(scope.target0);\n        scope.object.position.copy(scope.position0);\n        scope.object.zoom = scope.zoom0;\n        scope.object.updateProjectionMatrix();\n        scope.dispatchEvent(changeEvent);\n        scope.update();\n        state = STATE.NONE;\n    };\n    // this method is exposed, but perhaps it would be better if we can make it private...\n    this.update = function () {\n        var offset = new THREE.Vector3();\n        // so camera.up is the orbit axis\n        var quat = new THREE.Quaternion().setFromUnitVectors(object.up, new THREE.Vector3(0, 1, 0));\n        var quatInverse = quat.clone().inverse();\n        var lastPosition = new THREE.Vector3();\n        var lastQuaternion = new THREE.Quaternion();\n        return function update() {\n            var position = scope.object.position;\n            offset.copy(position).sub(scope.target);\n            // rotate offset to \"y-axis-is-up\" space\n            offset.applyQuaternion(quat);\n            // angle from z-axis around y-axis\n            spherical.setFromVector3(offset);\n            if (scope.autoRotate && state === STATE.NONE) {\n                rotateLeft(getAutoRotationAngle());\n            }\n            spherical.theta += sphericalDelta.theta;\n            spherical.phi += sphericalDelta.phi;\n            // restrict theta to be between desired limits\n            spherical.theta = Math.max(scope.minAzimuthAngle, Math.min(scope.maxAzimuthAngle, spherical.theta));\n            // restrict phi to be between desired limits\n            spherical.phi = Math.max(scope.minPolarAngle, Math.min(scope.maxPolarAngle, spherical.phi));\n            spherical.makeSafe();\n            spherical.radius *= scale;\n            // restrict radius to be between desired limits\n            spherical.radius = Math.max(scope.minDistance, Math.min(scope.maxDistance, spherical.radius));\n            // move target to panned location\n            scope.target.add(panOffset);\n            offset.setFromSpherical(spherical);\n            // rotate offset back to \"camera-up-vector-is-up\" space\n            offset.applyQuaternion(quatInverse);\n            position.copy(scope.target).add(offset);\n            scope.object.lookAt(scope.target);\n            if (scope.enableDamping === true) {\n                sphericalDelta.theta *= (1 - scope.dampingFactor);\n                sphericalDelta.phi *= (1 - scope.dampingFactor);\n                panOffset.multiplyScalar(1 - scope.dampingFactor);\n            }\n            else {\n                sphericalDelta.set(0, 0, 0);\n                panOffset.set(0, 0, 0);\n            }\n            scale = 1;\n            // update condition is:\n            // min(camera displacement, camera rotation in radians)^2 > EPS\n            // using small-angle approximation cos(x/2) = 1 - x^2 / 8\n            if (zoomChanged ||\n                lastPosition.distanceToSquared(scope.object.position) > EPS ||\n                8 * (1 - lastQuaternion.dot(scope.object.quaternion)) > EPS) {\n                scope.dispatchEvent(changeEvent);\n                lastPosition.copy(scope.object.position);\n                lastQuaternion.copy(scope.object.quaternion);\n                zoomChanged = false;\n                return true;\n            }\n            return false;\n        };\n    }();\n    this.dispose = function () {\n        scope.domElement.removeEventListener('contextmenu', onContextMenu, false);\n        scope.domElement.removeEventListener('mousedown', onMouseDown, false);\n        scope.domElement.removeEventListener('wheel', onMouseWheel, false);\n        scope.domElement.removeEventListener('touchstart', onTouchStart, false);\n        scope.domElement.removeEventListener('touchend', onTouchEnd, false);\n        scope.domElement.removeEventListener('touchmove', onTouchMove, false);\n        document.removeEventListener('mousemove', onMouseMove, false);\n        document.removeEventListener('mouseup', onMouseUp, false);\n        window.removeEventListener('keydown', onKeyDown, false);\n        //scope.dispatchEvent( { type: 'dispose' } ); // should this be added here?\n    };\n    //\n    // internals\n    //\n    var scope = this;\n    var changeEvent = { type: 'change' };\n    var startEvent = { type: 'start' };\n    var endEvent = { type: 'end' };\n    var STATE = { NONE: -1, ROTATE: 0, DOLLY: 1, PAN: 2, TOUCH_ROTATE: 3, TOUCH_DOLLY_PAN: 4 };\n    var state = STATE.NONE;\n    var EPS = 0.000001;\n    // current position in spherical coordinates\n    var spherical = new THREE.Spherical();\n    var sphericalDelta = new THREE.Spherical();\n    var scale = 1;\n    var panOffset = new THREE.Vector3();\n    var zoomChanged = false;\n    var rotateStart = new THREE.Vector2();\n    var rotateEnd = new THREE.Vector2();\n    var rotateDelta = new THREE.Vector2();\n    var panStart = new THREE.Vector2();\n    var panEnd = new THREE.Vector2();\n    var panDelta = new THREE.Vector2();\n    var dollyStart = new THREE.Vector2();\n    var dollyEnd = new THREE.Vector2();\n    var dollyDelta = new THREE.Vector2();\n    function getAutoRotationAngle() {\n        return 2 * Math.PI / 60 / 60 * scope.autoRotateSpeed;\n    }\n    function getZoomScale() {\n        return Math.pow(0.95, scope.zoomSpeed);\n    }\n    function rotateLeft(angle) {\n        sphericalDelta.theta -= angle;\n    }\n    function rotateUp(angle) {\n        sphericalDelta.phi -= angle;\n    }\n    var panLeft = function () {\n        var v = new THREE.Vector3();\n        return function panLeft(distance, objectMatrix) {\n            v.setFromMatrixColumn(objectMatrix, 0); // get X column of objectMatrix\n            v.multiplyScalar(-distance);\n            panOffset.add(v);\n        };\n    }();\n    var panUp = function () {\n        var v = new THREE.Vector3();\n        return function panUp(distance, objectMatrix) {\n            if (scope.screenSpacePanning === true) {\n                v.setFromMatrixColumn(objectMatrix, 1);\n            }\n            else {\n                v.setFromMatrixColumn(objectMatrix, 0);\n                v.crossVectors(scope.object.up, v);\n            }\n            v.multiplyScalar(distance);\n            panOffset.add(v);\n        };\n    }();\n    // deltaX and deltaY are in pixels; right and down are positive\n    var pan = function () {\n        var offset = new THREE.Vector3();\n        return function pan(deltaX, deltaY) {\n            var element = scope.domElement === document ? scope.domElement.body : scope.domElement;\n            if (scope.object.isPerspectiveCamera) {\n                // perspective\n                var position = scope.object.position;\n                offset.copy(position).sub(scope.target);\n                var targetDistance = offset.length();\n                // half of the fov is center to top of screen\n                targetDistance *= Math.tan((scope.object.fov / 2) * Math.PI / 180.0);\n                // we use only clientHeight here so aspect ratio does not distort speed\n                panLeft(2 * deltaX * targetDistance / element.clientHeight, scope.object.matrix);\n                panUp(2 * deltaY * targetDistance / element.clientHeight, scope.object.matrix);\n            }\n            else if (scope.object.isOrthographicCamera) {\n                // orthographic\n                panLeft(deltaX * (scope.object.right - scope.object.left) / scope.object.zoom / element.clientWidth, scope.object.matrix);\n                panUp(deltaY * (scope.object.top - scope.object.bottom) / scope.object.zoom / element.clientHeight, scope.object.matrix);\n            }\n            else {\n                // camera neither orthographic nor perspective\n                console.warn('WARNING: OrbitControls.js encountered an unknown camera type - pan disabled.');\n                scope.enablePan = false;\n            }\n        };\n    }();\n    function dollyIn(dollyScale) {\n        if (scope.object.isPerspectiveCamera) {\n            scale /= dollyScale;\n        }\n        else if (scope.object.isOrthographicCamera) {\n            scope.object.zoom = Math.max(scope.minZoom, Math.min(scope.maxZoom, scope.object.zoom * dollyScale));\n            scope.object.updateProjectionMatrix();\n            zoomChanged = true;\n        }\n        else {\n            console.warn('WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled.');\n            scope.enableZoom = false;\n        }\n    }\n    function dollyOut(dollyScale) {\n        if (scope.object.isPerspectiveCamera) {\n            scale *= dollyScale;\n        }\n        else if (scope.object.isOrthographicCamera) {\n            scope.object.zoom = Math.max(scope.minZoom, Math.min(scope.maxZoom, scope.object.zoom / dollyScale));\n            scope.object.updateProjectionMatrix();\n            zoomChanged = true;\n        }\n        else {\n            console.warn('WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled.');\n            scope.enableZoom = false;\n        }\n    }\n    //\n    // event callbacks - update the object state\n    //\n    function handleMouseDownRotate(event) {\n        //console.log( 'handleMouseDownRotate' );\n        rotateStart.set(event.clientX, event.clientY);\n    }\n    function handleMouseDownDolly(event) {\n        //console.log( 'handleMouseDownDolly' );\n        dollyStart.set(event.clientX, event.clientY);\n    }\n    function handleMouseDownPan(event) {\n        //console.log( 'handleMouseDownPan' );\n        panStart.set(event.clientX, event.clientY);\n    }\n    function handleMouseMoveRotate(event) {\n        //console.log( 'handleMouseMoveRotate' );\n        rotateEnd.set(event.clientX, event.clientY);\n        rotateDelta.subVectors(rotateEnd, rotateStart).multiplyScalar(scope.rotateSpeed);\n        var element = scope.domElement === document ? scope.domElement.body : scope.domElement;\n        rotateLeft(2 * Math.PI * rotateDelta.x / element.clientHeight); // yes, height\n        rotateUp(2 * Math.PI * rotateDelta.y / element.clientHeight);\n        rotateStart.copy(rotateEnd);\n        scope.update();\n    }\n    function handleMouseMoveDolly(event) {\n        //console.log( 'handleMouseMoveDolly' );\n        dollyEnd.set(event.clientX, event.clientY);\n        dollyDelta.subVectors(dollyEnd, dollyStart);\n        if (dollyDelta.y > 0) {\n            dollyIn(getZoomScale());\n        }\n        else if (dollyDelta.y < 0) {\n            dollyOut(getZoomScale());\n        }\n        dollyStart.copy(dollyEnd);\n        scope.update();\n    }\n    function handleMouseMovePan(event) {\n        //console.log( 'handleMouseMovePan' );\n        panEnd.set(event.clientX, event.clientY);\n        panDelta.subVectors(panEnd, panStart).multiplyScalar(scope.panSpeed);\n        pan(panDelta.x, panDelta.y);\n        panStart.copy(panEnd);\n        scope.update();\n    }\n    function handleMouseUp(event) {\n        // console.log( 'handleMouseUp' );\n    }\n    function handleMouseWheel(event) {\n        // console.log( 'handleMouseWheel' );\n        if (event.deltaY < 0) {\n            dollyOut(getZoomScale());\n        }\n        else if (event.deltaY > 0) {\n            dollyIn(getZoomScale());\n        }\n        scope.update();\n    }\n    function handleKeyDown(event) {\n        // console.log( 'handleKeyDown' );\n        var needsUpdate = false;\n        switch (event.keyCode) {\n            case scope.keys.UP:\n                pan(0, scope.keyPanSpeed);\n                needsUpdate = true;\n                break;\n            case scope.keys.BOTTOM:\n                pan(0, -scope.keyPanSpeed);\n                needsUpdate = true;\n                break;\n            case scope.keys.LEFT:\n                pan(scope.keyPanSpeed, 0);\n                needsUpdate = true;\n                break;\n            case scope.keys.RIGHT:\n                pan(-scope.keyPanSpeed, 0);\n                needsUpdate = true;\n                break;\n        }\n        if (needsUpdate) {\n            // prevent the browser from scrolling on cursor keys\n            event.preventDefault();\n            scope.update();\n        }\n    }\n    function handleTouchStartRotate(event) {\n        //console.log( 'handleTouchStartRotate' );\n        rotateStart.set(event.touches[0].pageX, event.touches[0].pageY);\n    }\n    function handleTouchStartDollyPan(event) {\n        //console.log( 'handleTouchStartDollyPan' );\n        if (scope.enableZoom) {\n            var dx = event.touches[0].pageX - event.touches[1].pageX;\n            var dy = event.touches[0].pageY - event.touches[1].pageY;\n            var distance = Math.sqrt(dx * dx + dy * dy);\n            dollyStart.set(0, distance);\n        }\n        if (scope.enablePan) {\n            var x = 0.5 * (event.touches[0].pageX + event.touches[1].pageX);\n            var y = 0.5 * (event.touches[0].pageY + event.touches[1].pageY);\n            panStart.set(x, y);\n        }\n    }\n    function handleTouchMoveRotate(event) {\n        //console.log( 'handleTouchMoveRotate' );\n        rotateEnd.set(event.touches[0].pageX, event.touches[0].pageY);\n        rotateDelta.subVectors(rotateEnd, rotateStart).multiplyScalar(scope.rotateSpeed);\n        var element = scope.domElement === document ? scope.domElement.body : scope.domElement;\n        rotateLeft(2 * Math.PI * rotateDelta.x / element.clientHeight); // yes, height\n        rotateUp(2 * Math.PI * rotateDelta.y / element.clientHeight);\n        rotateStart.copy(rotateEnd);\n        scope.update();\n    }\n    function handleTouchMoveDollyPan(event) {\n        //console.log( 'handleTouchMoveDollyPan' );\n        if (scope.enableZoom) {\n            var dx = event.touches[0].pageX - event.touches[1].pageX;\n            var dy = event.touches[0].pageY - event.touches[1].pageY;\n            var distance = Math.sqrt(dx * dx + dy * dy);\n            dollyEnd.set(0, distance);\n            dollyDelta.set(0, Math.pow(dollyEnd.y / dollyStart.y, scope.zoomSpeed));\n            dollyIn(dollyDelta.y);\n            dollyStart.copy(dollyEnd);\n        }\n        if (scope.enablePan) {\n            var x = 0.5 * (event.touches[0].pageX + event.touches[1].pageX);\n            var y = 0.5 * (event.touches[0].pageY + event.touches[1].pageY);\n            panEnd.set(x, y);\n            panDelta.subVectors(panEnd, panStart).multiplyScalar(scope.panSpeed);\n            pan(panDelta.x, panDelta.y);\n            panStart.copy(panEnd);\n        }\n        scope.update();\n    }\n    function handleTouchEnd(event) {\n        //console.log( 'handleTouchEnd' );\n    }\n    //\n    // event handlers - FSM: listen for events and reset state\n    //\n    function onMouseDown(event) {\n        if (scope.enabled === false)\n            return;\n        // Prevent the browser from scrolling.\n        event.preventDefault();\n        // Manually set the focus since calling preventDefault above\n        // prevents the browser from setting it automatically.\n        scope.domElement.focus ? scope.domElement.focus() : window.focus();\n        switch (event.button) {\n            case scope.mouseButtons.LEFT:\n                if (event.ctrlKey || event.metaKey || event.shiftKey) {\n                    if (scope.enablePan === false)\n                        return;\n                    handleMouseDownPan(event);\n                    state = STATE.PAN;\n                }\n                else {\n                    if (scope.enableRotate === false)\n                        return;\n                    handleMouseDownRotate(event);\n                    state = STATE.ROTATE;\n                }\n                break;\n            case scope.mouseButtons.MIDDLE:\n                if (scope.enableZoom === false)\n                    return;\n                handleMouseDownDolly(event);\n                state = STATE.DOLLY;\n                break;\n            case scope.mouseButtons.RIGHT:\n                if (scope.enablePan === false)\n                    return;\n                handleMouseDownPan(event);\n                state = STATE.PAN;\n                break;\n        }\n        if (state !== STATE.NONE) {\n            document.addEventListener('mousemove', onMouseMove, false);\n            document.addEventListener('mouseup', onMouseUp, false);\n            scope.dispatchEvent(startEvent);\n        }\n    }\n    function onMouseMove(event) {\n        if (scope.enabled === false)\n            return;\n        event.preventDefault();\n        switch (state) {\n            case STATE.ROTATE:\n                if (scope.enableRotate === false)\n                    return;\n                handleMouseMoveRotate(event);\n                break;\n            case STATE.DOLLY:\n                if (scope.enableZoom === false)\n                    return;\n                handleMouseMoveDolly(event);\n                break;\n            case STATE.PAN:\n                if (scope.enablePan === false)\n                    return;\n                handleMouseMovePan(event);\n                break;\n        }\n    }\n    function onMouseUp(event) {\n        if (scope.enabled === false)\n            return;\n        handleMouseUp(event);\n        document.removeEventListener('mousemove', onMouseMove, false);\n        document.removeEventListener('mouseup', onMouseUp, false);\n        scope.dispatchEvent(endEvent);\n        state = STATE.NONE;\n    }\n    function onMouseWheel(event) {\n        if (scope.enabled === false || scope.enableZoom === false || (state !== STATE.NONE && state !== STATE.ROTATE))\n            return;\n        event.preventDefault();\n        event.stopPropagation();\n        scope.dispatchEvent(startEvent);\n        handleMouseWheel(event);\n        scope.dispatchEvent(endEvent);\n    }\n    function onKeyDown(event) {\n        if (scope.enabled === false || scope.enableKeys === false || scope.enablePan === false)\n            return;\n        handleKeyDown(event);\n    }\n    function onTouchStart(event) {\n        if (scope.enabled === false)\n            return;\n        event.preventDefault();\n        switch (event.touches.length) {\n            case 1: // one-fingered touch: rotate\n                if (scope.enableRotate === false)\n                    return;\n                handleTouchStartRotate(event);\n                state = STATE.TOUCH_ROTATE;\n                break;\n            case 2: // two-fingered touch: dolly-pan\n                if (scope.enableZoom === false && scope.enablePan === false)\n                    return;\n                handleTouchStartDollyPan(event);\n                state = STATE.TOUCH_DOLLY_PAN;\n                break;\n            default:\n                state = STATE.NONE;\n        }\n        if (state !== STATE.NONE) {\n            scope.dispatchEvent(startEvent);\n        }\n    }\n    function onTouchMove(event) {\n        if (scope.enabled === false)\n            return;\n        event.preventDefault();\n        event.stopPropagation();\n        switch (event.touches.length) {\n            case 1: // one-fingered touch: rotate\n                if (scope.enableRotate === false)\n                    return;\n                if (state !== STATE.TOUCH_ROTATE)\n                    return; // is this needed?\n                handleTouchMoveRotate(event);\n                break;\n            case 2: // two-fingered touch: dolly-pan\n                if (scope.enableZoom === false && scope.enablePan === false)\n                    return;\n                if (state !== STATE.TOUCH_DOLLY_PAN)\n                    return; // is this needed?\n                handleTouchMoveDollyPan(event);\n                break;\n            default:\n                state = STATE.NONE;\n        }\n    }\n    function onTouchEnd(event) {\n        if (scope.enabled === false)\n            return;\n        handleTouchEnd(event);\n        scope.dispatchEvent(endEvent);\n        state = STATE.NONE;\n    }\n    function onContextMenu(event) {\n        if (scope.enabled === false)\n            return;\n        event.preventDefault();\n    }\n    //\n    scope.domElement.addEventListener('contextmenu', onContextMenu, false);\n    scope.domElement.addEventListener('mousedown', onMouseDown, false);\n    scope.domElement.addEventListener('wheel', onMouseWheel, false);\n    scope.domElement.addEventListener('touchstart', onTouchStart, false);\n    scope.domElement.addEventListener('touchend', onTouchEnd, false);\n    scope.domElement.addEventListener('touchmove', onTouchMove, false);\n    window.addEventListener('keydown', onKeyDown, false);\n    // force an update at start\n    this.update();\n};\nOrbitControls.prototype = Object.create(THREE.EventDispatcher.prototype);\nOrbitControls.prototype.constructor = OrbitControls;\nObject.defineProperties(OrbitControls.prototype, {\n    center: {\n        get: function () {\n            console.warn('THREE.OrbitControls: .center has been renamed to .target');\n            return this.target;\n        }\n    },\n    // backward compatibility\n    noZoom: {\n        get: function () {\n            console.warn('THREE.OrbitControls: .noZoom has been deprecated. Use .enableZoom instead.');\n            return !this.enableZoom;\n        },\n        set: function (value) {\n            console.warn('THREE.OrbitControls: .noZoom has been deprecated. Use .enableZoom instead.');\n            this.enableZoom = !value;\n        }\n    },\n    noRotate: {\n        get: function () {\n            console.warn('THREE.OrbitControls: .noRotate has been deprecated. Use .enableRotate instead.');\n            return !this.enableRotate;\n        },\n        set: function (value) {\n            console.warn('THREE.OrbitControls: .noRotate has been deprecated. Use .enableRotate instead.');\n            this.enableRotate = !value;\n        }\n    },\n    noPan: {\n        get: function () {\n            console.warn('THREE.OrbitControls: .noPan has been deprecated. Use .enablePan instead.');\n            return !this.enablePan;\n        },\n        set: function (value) {\n            console.warn('THREE.OrbitControls: .noPan has been deprecated. Use .enablePan instead.');\n            this.enablePan = !value;\n        }\n    },\n    noKeys: {\n        get: function () {\n            console.warn('THREE.OrbitControls: .noKeys has been deprecated. Use .enableKeys instead.');\n            return !this.enableKeys;\n        },\n        set: function (value) {\n            console.warn('THREE.OrbitControls: .noKeys has been deprecated. Use .enableKeys instead.');\n            this.enableKeys = !value;\n        }\n    },\n    staticMoving: {\n        get: function () {\n            console.warn('THREE.OrbitControls: .staticMoving has been deprecated. Use .enableDamping instead.');\n            return !this.enableDamping;\n        },\n        set: function (value) {\n            console.warn('THREE.OrbitControls: .staticMoving has been deprecated. Use .enableDamping instead.');\n            this.enableDamping = !value;\n        }\n    },\n    dynamicDampingFactor: {\n        get: function () {\n            console.warn('THREE.OrbitControls: .dynamicDampingFactor has been renamed. Use .dampingFactor instead.');\n            return this.dampingFactor;\n        },\n        set: function (value) {\n            console.warn('THREE.OrbitControls: .dynamicDampingFactor has been renamed. Use .dampingFactor instead.');\n            this.dampingFactor = value;\n        }\n    }\n});\nexports.orbitControls = function (camera, domElement, renderer, scene) {\n    var controls = new OrbitControls(camera, renderer.domElement);\n    controls.update();\n    var animate = function () {\n        requestAnimationFrame(animate);\n        controls.update();\n        renderer.render(scene, camera);\n    };\n    animate();\n    var resize = function () {\n        var width = domElement.offsetWidth, height = domElement.offsetHeight;\n        renderer.setSize(width, height);\n        camera.aspect = width / height;\n        camera.updateProjectionMatrix();\n    };\n    resize();\n    window.addEventListener('resize', resize);\n};\nexports.default = OrbitControls;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar THREE = require(\"three\");\nvar OrbitControls_1 = require(\"./controls/OrbitControls\");\nvar __global__ = window;\n__global__.THREE = __global__.THREE || THREE;\nvar scene = new THREE.Scene();\nvar camera = new THREE.PerspectiveCamera(45, window.innerWidth / window.innerHeight, 0.1, 1000);\ncamera.position.set(0, 0, 35);\nvar renderer = new THREE.WebGLRenderer({ canvas: document.querySelector('#webgl-canvas') });\nrenderer.setClearColor(0xeeeeee);\nrenderer.setSize(window.innerWidth, window.innerHeight);\nrenderer.shadowMap.enabled = true;\ndocument.body.appendChild(renderer.domElement);\nvar planeGeometry = new THREE.PlaneGeometry(60, 40, 1, 1);\nvar planeMaterial = new THREE.MeshLambertMaterial({ color: 0xffffff });\nvar plane = new THREE.Mesh(planeGeometry, planeMaterial);\nplane.receiveShadow = true;\nplane.rotation.x = -0.5 * Math.PI;\nplane.position.x = 0;\nplane.position.y = 0;\nplane.position.z = 0;\nscene.add(plane);\nvar ambientLight = new THREE.AmbientLight(0x0c0c0c);\nscene.add(ambientLight);\nvar spotLight = new THREE.SpotLight(0xffffff);\nspotLight.position.set(-40, 60, -10);\nspotLight.castShadow = true;\nscene.add(spotLight);\nvar numbersOfObjects = 0;\nvar addCube = function () {\n    var cubeSize = Math.ceil((Math.random() * 3));\n    var cubeGeometry = new THREE.BoxGeometry(cubeSize, cubeSize, cubeSize);\n    var cubeMaterial = new THREE.MeshLambertMaterial({ color: Math.random() * 0xffffff });\n    var cube = new THREE.Mesh(cubeGeometry, cubeMaterial);\n    cube.castShadow = true;\n    cube.name = 'cube-' + scene.children.length;\n    cube.position.x = -30 + Math.round((Math.random() * 60 /*planeGeometry.width */));\n    cube.position.y = Math.round((Math.random() * 5));\n    cube.position.z = -20 + Math.round((Math.random() * 40));\n    scene.add(cube);\n    numbersOfObjects = scene.children.length;\n};\nrenderer.render(scene, camera);\n__global__.addCube = addCube;\nOrbitControls_1.orbitControls(camera, document.body, renderer, scene);\nfor (var i = 0; i < 200; i++) {\n    addCube();\n}\n"],"sourceRoot":""}