{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/threejs/controls/OrbitControls.ts","webpack:///./src/threejs/extrude-walls/index.page.ts","webpack:///./src/threejs/extrude-walls/data/lo024DEgzanMj5BE.ts"],"names":["webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","executeModules","i","resolves","length","installedChunks","push","Object","prototype","hasOwnProperty","call","modules","parentJsonpFunction","shift","deferredModules","apply","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","installedModules","5","exports","module","l","m","c","d","name","getter","o","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","p","jsonpArray","window","oldJsonpFunction","slice","THREE","OrbitControls","domElement","offset","quat","quatInverse","lastPosition","lastQuaternion","this","undefined","document","enabled","target","Vector3","minDistance","maxDistance","Infinity","minZoom","maxZoom","minPolarAngle","maxPolarAngle","Math","PI","minAzimuthAngle","maxAzimuthAngle","enableDamping","dampingFactor","enableZoom","zoomSpeed","enableRotate","rotateSpeed","enablePan","panSpeed","screenSpacePanning","keyPanSpeed","autoRotate","autoRotateSpeed","enableKeys","keys","LEFT","UP","RIGHT","BOTTOM","mouseButtons","MOUSE","MIDDLE","target0","clone","position0","position","zoom0","zoom","getPolarAngle","spherical","phi","getAzimuthalAngle","theta","saveState","scope","copy","reset","updateProjectionMatrix","dispatchEvent","changeEvent","update","state","STATE","NONE","Quaternion","setFromUnitVectors","up","inverse","sub","applyQuaternion","setFromVector3","rotateLeft","sphericalDelta","max","min","makeSafe","radius","scale","add","panOffset","setFromSpherical","lookAt","multiplyScalar","set","zoomChanged","distanceToSquared","EPS","dot","quaternion","dispose","removeEventListener","onContextMenu","onMouseDown","onMouseWheel","onTouchStart","onTouchEnd","onTouchMove","onMouseMove","onMouseUp","onKeyDown","type","startEvent","endEvent","ROTATE","DOLLY","PAN","TOUCH_ROTATE","TOUCH_DOLLY_PAN","Spherical","rotateStart","Vector2","rotateEnd","rotateDelta","panStart","panEnd","panDelta","dollyStart","dollyEnd","dollyDelta","getZoomScale","pow","angle","rotateUp","v","panLeft","distance","objectMatrix","setFromMatrixColumn","panUp","crossVectors","pan","deltaX","deltaY","element","body","isPerspectiveCamera","targetDistance","tan","fov","clientHeight","matrix","isOrthographicCamera","right","left","clientWidth","top","bottom","console","warn","dollyIn","dollyScale","dollyOut","handleMouseDownPan","event","clientX","clientY","preventDefault","focus","button","ctrlKey","metaKey","shiftKey","handleMouseDownRotate","handleMouseDownDolly","addEventListener","subVectors","x","y","handleMouseMoveRotate","handleMouseMoveDolly","handleMouseMovePan","stopPropagation","handleMouseWheel","needsUpdate","keyCode","handleKeyDown","touches","pageX","pageY","handleTouchStartRotate","dx","dy","sqrt","handleTouchStartDollyPan","handleTouchMoveRotate","handleTouchMoveDollyPan","EventDispatcher","constructor","defineProperties","center","noZoom","noRotate","noPan","noKeys","staticMoving","dynamicDampingFactor","orbitControls","camera","renderer","scene","controls","animate","requestAnimationFrame","render","resize","width","offsetWidth","height","offsetHeight","setSize","aspect","default","OrbitControls_1","lo024DEgzanMj5BE_1","__global__","Scene","PerspectiveCamera","innerWidth","innerHeight","WebGLRenderer","canvas","querySelector","appendChild","shape","Shape","shapeEWalls","line2","replace","split","map","Number","forEach","exterior","interior","extrudeSettings","steps","depth","bevelEnabled","geometry","ExtrudeGeometry","geometryEFront","geometryEBack","faces","face","a","material0","MeshBasicMaterial","color","wireframe","transparent","opacity","material1","material2","renderOrder","meshConfig","meshEBack","Mesh","mesh","meshEFront","meshEBackS","meshEFrontS","meshS","meshDefault"],"mappings":"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","file":"threejs/extrude-walls/index-b0f56e82.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t5: 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"//solome.js.org/front-end-explore/webgl\";\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([7,0]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","\"use strict\";\n/**\n * @author qiao / https://github.com/qiao\n * @author mrdoob / http://mrdoob.com\n * @author alteredq / http://alteredqualia.com/\n * @author WestLangley / http://github.com/WestLangley\n * @author erich666 / http://erichaines.com\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\n// This set of controls performs orbiting, dollying (zooming), and panning.\n// Unlike TrackballControls, it maintains the \"up\" direction object.up (+Y by default).\n//\n//    Orbit - left mouse / touch: one-finger move\n//    Zoom - middle mouse, or mousewheel / touch: two-finger spread or squish\n//    Pan - right mouse, or left mouse + ctrl/meta/shiftKey, or arrow keys / touch: two-finger move\nvar THREE = require(\"three\");\nvar OrbitControls = function (object, domElement) {\n    this.object = object;\n    this.domElement = (domElement !== undefined) ? domElement : document;\n    // Set to false to disable this control\n    this.enabled = true;\n    // \"target\" sets the location of focus, where the object orbits around\n    this.target = new THREE.Vector3();\n    // How far you can dolly in and out ( PerspectiveCamera only )\n    this.minDistance = 0;\n    this.maxDistance = Infinity;\n    // How far you can zoom in and out ( OrthographicCamera only )\n    this.minZoom = 0;\n    this.maxZoom = Infinity;\n    // How far you can orbit vertically, upper and lower limits.\n    // Range is 0 to Math.PI radians.\n    this.minPolarAngle = 0; // radians\n    this.maxPolarAngle = Math.PI; // radians\n    // How far you can orbit horizontally, upper and lower limits.\n    // If set, must be a sub-interval of the interval [ - Math.PI, Math.PI ].\n    this.minAzimuthAngle = -Infinity; // radians\n    this.maxAzimuthAngle = Infinity; // radians\n    // Set to true to enable damping (inertia)\n    // If damping is enabled, you must call controls.update() in your animation loop\n    this.enableDamping = false;\n    this.dampingFactor = 0.25;\n    // This option actually enables dollying in and out; left as \"zoom\" for backwards compatibility.\n    // Set to false to disable zooming\n    this.enableZoom = true;\n    this.zoomSpeed = 1.0;\n    // Set to false to disable rotating\n    this.enableRotate = true;\n    this.rotateSpeed = 1.0;\n    // Set to false to disable panning\n    this.enablePan = true;\n    this.panSpeed = 1.0;\n    this.screenSpacePanning = false; // if true, pan in screen-space\n    this.keyPanSpeed = 7.0; // pixels moved per arrow key push\n    // Set to true to automatically rotate around the target\n    // If auto-rotate is enabled, you must call controls.update() in your animation loop\n    this.autoRotate = false;\n    this.autoRotateSpeed = 2.0; // 30 seconds per round when fps is 60\n    // Set to false to disable use of the keys\n    this.enableKeys = true;\n    // The four arrow keys\n    this.keys = { LEFT: 37, UP: 38, RIGHT: 39, BOTTOM: 40 };\n    // Mouse buttons\n    this.mouseButtons = { LEFT: THREE.MOUSE.LEFT, MIDDLE: THREE.MOUSE.MIDDLE, RIGHT: THREE.MOUSE.RIGHT };\n    // for reset\n    this.target0 = this.target.clone();\n    this.position0 = this.object.position.clone();\n    this.zoom0 = this.object.zoom;\n    //\n    // public methods\n    //\n    this.getPolarAngle = function () {\n        return spherical.phi;\n    };\n    this.getAzimuthalAngle = function () {\n        return spherical.theta;\n    };\n    this.saveState = function () {\n        scope.target0.copy(scope.target);\n        scope.position0.copy(scope.object.position);\n        scope.zoom0 = scope.object.zoom;\n    };\n    this.reset = function () {\n        scope.target.copy(scope.target0);\n        scope.object.position.copy(scope.position0);\n        scope.object.zoom = scope.zoom0;\n        scope.object.updateProjectionMatrix();\n        scope.dispatchEvent(changeEvent);\n        scope.update();\n        state = STATE.NONE;\n    };\n    // this method is exposed, but perhaps it would be better if we can make it private...\n    this.update = function () {\n        var offset = new THREE.Vector3();\n        // so camera.up is the orbit axis\n        var quat = new THREE.Quaternion().setFromUnitVectors(object.up, new THREE.Vector3(0, 1, 0));\n        var quatInverse = quat.clone().inverse();\n        var lastPosition = new THREE.Vector3();\n        var lastQuaternion = new THREE.Quaternion();\n        return function update() {\n            var position = scope.object.position;\n            offset.copy(position).sub(scope.target);\n            // rotate offset to \"y-axis-is-up\" space\n            offset.applyQuaternion(quat);\n            // angle from z-axis around y-axis\n            spherical.setFromVector3(offset);\n            if (scope.autoRotate && state === STATE.NONE) {\n                rotateLeft(getAutoRotationAngle());\n            }\n            spherical.theta += sphericalDelta.theta;\n            spherical.phi += sphericalDelta.phi;\n            // restrict theta to be between desired limits\n            spherical.theta = Math.max(scope.minAzimuthAngle, Math.min(scope.maxAzimuthAngle, spherical.theta));\n            // restrict phi to be between desired limits\n            spherical.phi = Math.max(scope.minPolarAngle, Math.min(scope.maxPolarAngle, spherical.phi));\n            spherical.makeSafe();\n            spherical.radius *= scale;\n            // restrict radius to be between desired limits\n            spherical.radius = Math.max(scope.minDistance, Math.min(scope.maxDistance, spherical.radius));\n            // move target to panned location\n            scope.target.add(panOffset);\n            offset.setFromSpherical(spherical);\n            // rotate offset back to \"camera-up-vector-is-up\" space\n            offset.applyQuaternion(quatInverse);\n            position.copy(scope.target).add(offset);\n            scope.object.lookAt(scope.target);\n            if (scope.enableDamping === true) {\n                sphericalDelta.theta *= (1 - scope.dampingFactor);\n                sphericalDelta.phi *= (1 - scope.dampingFactor);\n                panOffset.multiplyScalar(1 - scope.dampingFactor);\n            }\n            else {\n                sphericalDelta.set(0, 0, 0);\n                panOffset.set(0, 0, 0);\n            }\n            scale = 1;\n            // update condition is:\n            // min(camera displacement, camera rotation in radians)^2 > EPS\n            // using small-angle approximation cos(x/2) = 1 - x^2 / 8\n            if (zoomChanged ||\n                lastPosition.distanceToSquared(scope.object.position) > EPS ||\n                8 * (1 - lastQuaternion.dot(scope.object.quaternion)) > EPS) {\n                scope.dispatchEvent(changeEvent);\n                lastPosition.copy(scope.object.position);\n                lastQuaternion.copy(scope.object.quaternion);\n                zoomChanged = false;\n                return true;\n            }\n            return false;\n        };\n    }();\n    this.dispose = function () {\n        scope.domElement.removeEventListener('contextmenu', onContextMenu, false);\n        scope.domElement.removeEventListener('mousedown', onMouseDown, false);\n        scope.domElement.removeEventListener('wheel', onMouseWheel, false);\n        scope.domElement.removeEventListener('touchstart', onTouchStart, false);\n        scope.domElement.removeEventListener('touchend', onTouchEnd, false);\n        scope.domElement.removeEventListener('touchmove', onTouchMove, false);\n        document.removeEventListener('mousemove', onMouseMove, false);\n        document.removeEventListener('mouseup', onMouseUp, false);\n        window.removeEventListener('keydown', onKeyDown, false);\n        //scope.dispatchEvent( { type: 'dispose' } ); // should this be added here?\n    };\n    //\n    // internals\n    //\n    var scope = this;\n    var changeEvent = { type: 'change' };\n    var startEvent = { type: 'start' };\n    var endEvent = { type: 'end' };\n    var STATE = { NONE: -1, ROTATE: 0, DOLLY: 1, PAN: 2, TOUCH_ROTATE: 3, TOUCH_DOLLY_PAN: 4 };\n    var state = STATE.NONE;\n    var EPS = 0.000001;\n    // current position in spherical coordinates\n    var spherical = new THREE.Spherical();\n    var sphericalDelta = new THREE.Spherical();\n    var scale = 1;\n    var panOffset = new THREE.Vector3();\n    var zoomChanged = false;\n    var rotateStart = new THREE.Vector2();\n    var rotateEnd = new THREE.Vector2();\n    var rotateDelta = new THREE.Vector2();\n    var panStart = new THREE.Vector2();\n    var panEnd = new THREE.Vector2();\n    var panDelta = new THREE.Vector2();\n    var dollyStart = new THREE.Vector2();\n    var dollyEnd = new THREE.Vector2();\n    var dollyDelta = new THREE.Vector2();\n    function getAutoRotationAngle() {\n        return 2 * Math.PI / 60 / 60 * scope.autoRotateSpeed;\n    }\n    function getZoomScale() {\n        return Math.pow(0.95, scope.zoomSpeed);\n    }\n    function rotateLeft(angle) {\n        sphericalDelta.theta -= angle;\n    }\n    function rotateUp(angle) {\n        sphericalDelta.phi -= angle;\n    }\n    var panLeft = function () {\n        var v = new THREE.Vector3();\n        return function panLeft(distance, objectMatrix) {\n            v.setFromMatrixColumn(objectMatrix, 0); // get X column of objectMatrix\n            v.multiplyScalar(-distance);\n            panOffset.add(v);\n        };\n    }();\n    var panUp = function () {\n        var v = new THREE.Vector3();\n        return function panUp(distance, objectMatrix) {\n            if (scope.screenSpacePanning === true) {\n                v.setFromMatrixColumn(objectMatrix, 1);\n            }\n            else {\n                v.setFromMatrixColumn(objectMatrix, 0);\n                v.crossVectors(scope.object.up, v);\n            }\n            v.multiplyScalar(distance);\n            panOffset.add(v);\n        };\n    }();\n    // deltaX and deltaY are in pixels; right and down are positive\n    var pan = function () {\n        var offset = new THREE.Vector3();\n        return function pan(deltaX, deltaY) {\n            var element = scope.domElement === document ? scope.domElement.body : scope.domElement;\n            if (scope.object.isPerspectiveCamera) {\n                // perspective\n                var position = scope.object.position;\n                offset.copy(position).sub(scope.target);\n                var targetDistance = offset.length();\n                // half of the fov is center to top of screen\n                targetDistance *= Math.tan((scope.object.fov / 2) * Math.PI / 180.0);\n                // we use only clientHeight here so aspect ratio does not distort speed\n                panLeft(2 * deltaX * targetDistance / element.clientHeight, scope.object.matrix);\n                panUp(2 * deltaY * targetDistance / element.clientHeight, scope.object.matrix);\n            }\n            else if (scope.object.isOrthographicCamera) {\n                // orthographic\n                panLeft(deltaX * (scope.object.right - scope.object.left) / scope.object.zoom / element.clientWidth, scope.object.matrix);\n                panUp(deltaY * (scope.object.top - scope.object.bottom) / scope.object.zoom / element.clientHeight, scope.object.matrix);\n            }\n            else {\n                // camera neither orthographic nor perspective\n                console.warn('WARNING: OrbitControls.js encountered an unknown camera type - pan disabled.');\n                scope.enablePan = false;\n            }\n        };\n    }();\n    function dollyIn(dollyScale) {\n        if (scope.object.isPerspectiveCamera) {\n            scale /= dollyScale;\n        }\n        else if (scope.object.isOrthographicCamera) {\n            scope.object.zoom = Math.max(scope.minZoom, Math.min(scope.maxZoom, scope.object.zoom * dollyScale));\n            scope.object.updateProjectionMatrix();\n            zoomChanged = true;\n        }\n        else {\n            console.warn('WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled.');\n            scope.enableZoom = false;\n        }\n    }\n    function dollyOut(dollyScale) {\n        if (scope.object.isPerspectiveCamera) {\n            scale *= dollyScale;\n        }\n        else if (scope.object.isOrthographicCamera) {\n            scope.object.zoom = Math.max(scope.minZoom, Math.min(scope.maxZoom, scope.object.zoom / dollyScale));\n            scope.object.updateProjectionMatrix();\n            zoomChanged = true;\n        }\n        else {\n            console.warn('WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled.');\n            scope.enableZoom = false;\n        }\n    }\n    //\n    // event callbacks - update the object state\n    //\n    function handleMouseDownRotate(event) {\n        //console.log( 'handleMouseDownRotate' );\n        rotateStart.set(event.clientX, event.clientY);\n    }\n    function handleMouseDownDolly(event) {\n        //console.log( 'handleMouseDownDolly' );\n        dollyStart.set(event.clientX, event.clientY);\n    }\n    function handleMouseDownPan(event) {\n        //console.log( 'handleMouseDownPan' );\n        panStart.set(event.clientX, event.clientY);\n    }\n    function handleMouseMoveRotate(event) {\n        //console.log( 'handleMouseMoveRotate' );\n        rotateEnd.set(event.clientX, event.clientY);\n        rotateDelta.subVectors(rotateEnd, rotateStart).multiplyScalar(scope.rotateSpeed);\n        var element = scope.domElement === document ? scope.domElement.body : scope.domElement;\n        rotateLeft(2 * Math.PI * rotateDelta.x / element.clientHeight); // yes, height\n        rotateUp(2 * Math.PI * rotateDelta.y / element.clientHeight);\n        rotateStart.copy(rotateEnd);\n        scope.update();\n    }\n    function handleMouseMoveDolly(event) {\n        //console.log( 'handleMouseMoveDolly' );\n        dollyEnd.set(event.clientX, event.clientY);\n        dollyDelta.subVectors(dollyEnd, dollyStart);\n        if (dollyDelta.y > 0) {\n            dollyIn(getZoomScale());\n        }\n        else if (dollyDelta.y < 0) {\n            dollyOut(getZoomScale());\n        }\n        dollyStart.copy(dollyEnd);\n        scope.update();\n    }\n    function handleMouseMovePan(event) {\n        //console.log( 'handleMouseMovePan' );\n        panEnd.set(event.clientX, event.clientY);\n        panDelta.subVectors(panEnd, panStart).multiplyScalar(scope.panSpeed);\n        pan(panDelta.x, panDelta.y);\n        panStart.copy(panEnd);\n        scope.update();\n    }\n    function handleMouseUp(event) {\n        // console.log( 'handleMouseUp' );\n    }\n    function handleMouseWheel(event) {\n        // console.log( 'handleMouseWheel' );\n        if (event.deltaY < 0) {\n            dollyOut(getZoomScale());\n        }\n        else if (event.deltaY > 0) {\n            dollyIn(getZoomScale());\n        }\n        scope.update();\n    }\n    function handleKeyDown(event) {\n        // console.log( 'handleKeyDown' );\n        var needsUpdate = false;\n        switch (event.keyCode) {\n            case scope.keys.UP:\n                pan(0, scope.keyPanSpeed);\n                needsUpdate = true;\n                break;\n            case scope.keys.BOTTOM:\n                pan(0, -scope.keyPanSpeed);\n                needsUpdate = true;\n                break;\n            case scope.keys.LEFT:\n                pan(scope.keyPanSpeed, 0);\n                needsUpdate = true;\n                break;\n            case scope.keys.RIGHT:\n                pan(-scope.keyPanSpeed, 0);\n                needsUpdate = true;\n                break;\n        }\n        if (needsUpdate) {\n            // prevent the browser from scrolling on cursor keys\n            event.preventDefault();\n            scope.update();\n        }\n    }\n    function handleTouchStartRotate(event) {\n        //console.log( 'handleTouchStartRotate' );\n        rotateStart.set(event.touches[0].pageX, event.touches[0].pageY);\n    }\n    function handleTouchStartDollyPan(event) {\n        //console.log( 'handleTouchStartDollyPan' );\n        if (scope.enableZoom) {\n            var dx = event.touches[0].pageX - event.touches[1].pageX;\n            var dy = event.touches[0].pageY - event.touches[1].pageY;\n            var distance = Math.sqrt(dx * dx + dy * dy);\n            dollyStart.set(0, distance);\n        }\n        if (scope.enablePan) {\n            var x = 0.5 * (event.touches[0].pageX + event.touches[1].pageX);\n            var y = 0.5 * (event.touches[0].pageY + event.touches[1].pageY);\n            panStart.set(x, y);\n        }\n    }\n    function handleTouchMoveRotate(event) {\n        //console.log( 'handleTouchMoveRotate' );\n        rotateEnd.set(event.touches[0].pageX, event.touches[0].pageY);\n        rotateDelta.subVectors(rotateEnd, rotateStart).multiplyScalar(scope.rotateSpeed);\n        var element = scope.domElement === document ? scope.domElement.body : scope.domElement;\n        rotateLeft(2 * Math.PI * rotateDelta.x / element.clientHeight); // yes, height\n        rotateUp(2 * Math.PI * rotateDelta.y / element.clientHeight);\n        rotateStart.copy(rotateEnd);\n        scope.update();\n    }\n    function handleTouchMoveDollyPan(event) {\n        //console.log( 'handleTouchMoveDollyPan' );\n        if (scope.enableZoom) {\n            var dx = event.touches[0].pageX - event.touches[1].pageX;\n            var dy = event.touches[0].pageY - event.touches[1].pageY;\n            var distance = Math.sqrt(dx * dx + dy * dy);\n            dollyEnd.set(0, distance);\n            dollyDelta.set(0, Math.pow(dollyEnd.y / dollyStart.y, scope.zoomSpeed));\n            dollyIn(dollyDelta.y);\n            dollyStart.copy(dollyEnd);\n        }\n        if (scope.enablePan) {\n            var x = 0.5 * (event.touches[0].pageX + event.touches[1].pageX);\n            var y = 0.5 * (event.touches[0].pageY + event.touches[1].pageY);\n            panEnd.set(x, y);\n            panDelta.subVectors(panEnd, panStart).multiplyScalar(scope.panSpeed);\n            pan(panDelta.x, panDelta.y);\n            panStart.copy(panEnd);\n        }\n        scope.update();\n    }\n    function handleTouchEnd(event) {\n        //console.log( 'handleTouchEnd' );\n    }\n    //\n    // event handlers - FSM: listen for events and reset state\n    //\n    function onMouseDown(event) {\n        if (scope.enabled === false)\n            return;\n        // Prevent the browser from scrolling.\n        event.preventDefault();\n        // Manually set the focus since calling preventDefault above\n        // prevents the browser from setting it automatically.\n        scope.domElement.focus ? scope.domElement.focus() : window.focus();\n        switch (event.button) {\n            case scope.mouseButtons.LEFT:\n                if (event.ctrlKey || event.metaKey || event.shiftKey) {\n                    if (scope.enablePan === false)\n                        return;\n                    handleMouseDownPan(event);\n                    state = STATE.PAN;\n                }\n                else {\n                    if (scope.enableRotate === false)\n                        return;\n                    handleMouseDownRotate(event);\n                    state = STATE.ROTATE;\n                }\n                break;\n            case scope.mouseButtons.MIDDLE:\n                if (scope.enableZoom === false)\n                    return;\n                handleMouseDownDolly(event);\n                state = STATE.DOLLY;\n                break;\n            case scope.mouseButtons.RIGHT:\n                if (scope.enablePan === false)\n                    return;\n                handleMouseDownPan(event);\n                state = STATE.PAN;\n                break;\n        }\n        if (state !== STATE.NONE) {\n            document.addEventListener('mousemove', onMouseMove, false);\n            document.addEventListener('mouseup', onMouseUp, false);\n            scope.dispatchEvent(startEvent);\n        }\n    }\n    function onMouseMove(event) {\n        if (scope.enabled === false)\n            return;\n        event.preventDefault();\n        switch (state) {\n            case STATE.ROTATE:\n                if (scope.enableRotate === false)\n                    return;\n                handleMouseMoveRotate(event);\n                break;\n            case STATE.DOLLY:\n                if (scope.enableZoom === false)\n                    return;\n                handleMouseMoveDolly(event);\n                break;\n            case STATE.PAN:\n                if (scope.enablePan === false)\n                    return;\n                handleMouseMovePan(event);\n                break;\n        }\n    }\n    function onMouseUp(event) {\n        if (scope.enabled === false)\n            return;\n        handleMouseUp(event);\n        document.removeEventListener('mousemove', onMouseMove, false);\n        document.removeEventListener('mouseup', onMouseUp, false);\n        scope.dispatchEvent(endEvent);\n        state = STATE.NONE;\n    }\n    function onMouseWheel(event) {\n        if (scope.enabled === false || scope.enableZoom === false || (state !== STATE.NONE && state !== STATE.ROTATE))\n            return;\n        event.preventDefault();\n        event.stopPropagation();\n        scope.dispatchEvent(startEvent);\n        handleMouseWheel(event);\n        scope.dispatchEvent(endEvent);\n    }\n    function onKeyDown(event) {\n        if (scope.enabled === false || scope.enableKeys === false || scope.enablePan === false)\n            return;\n        handleKeyDown(event);\n    }\n    function onTouchStart(event) {\n        if (scope.enabled === false)\n            return;\n        event.preventDefault();\n        switch (event.touches.length) {\n            case 1: // one-fingered touch: rotate\n                if (scope.enableRotate === false)\n                    return;\n                handleTouchStartRotate(event);\n                state = STATE.TOUCH_ROTATE;\n                break;\n            case 2: // two-fingered touch: dolly-pan\n                if (scope.enableZoom === false && scope.enablePan === false)\n                    return;\n                handleTouchStartDollyPan(event);\n                state = STATE.TOUCH_DOLLY_PAN;\n                break;\n            default:\n                state = STATE.NONE;\n        }\n        if (state !== STATE.NONE) {\n            scope.dispatchEvent(startEvent);\n        }\n    }\n    function onTouchMove(event) {\n        if (scope.enabled === false)\n            return;\n        event.preventDefault();\n        event.stopPropagation();\n        switch (event.touches.length) {\n            case 1: // one-fingered touch: rotate\n                if (scope.enableRotate === false)\n                    return;\n                if (state !== STATE.TOUCH_ROTATE)\n                    return; // is this needed?\n                handleTouchMoveRotate(event);\n                break;\n            case 2: // two-fingered touch: dolly-pan\n                if (scope.enableZoom === false && scope.enablePan === false)\n                    return;\n                if (state !== STATE.TOUCH_DOLLY_PAN)\n                    return; // is this needed?\n                handleTouchMoveDollyPan(event);\n                break;\n            default:\n                state = STATE.NONE;\n        }\n    }\n    function onTouchEnd(event) {\n        if (scope.enabled === false)\n            return;\n        handleTouchEnd(event);\n        scope.dispatchEvent(endEvent);\n        state = STATE.NONE;\n    }\n    function onContextMenu(event) {\n        if (scope.enabled === false)\n            return;\n        event.preventDefault();\n    }\n    //\n    scope.domElement.addEventListener('contextmenu', onContextMenu, false);\n    scope.domElement.addEventListener('mousedown', onMouseDown, false);\n    scope.domElement.addEventListener('wheel', onMouseWheel, false);\n    scope.domElement.addEventListener('touchstart', onTouchStart, false);\n    scope.domElement.addEventListener('touchend', onTouchEnd, false);\n    scope.domElement.addEventListener('touchmove', onTouchMove, false);\n    window.addEventListener('keydown', onKeyDown, false);\n    // force an update at start\n    this.update();\n};\nOrbitControls.prototype = Object.create(THREE.EventDispatcher.prototype);\nOrbitControls.prototype.constructor = OrbitControls;\nObject.defineProperties(OrbitControls.prototype, {\n    center: {\n        get: function () {\n            console.warn('THREE.OrbitControls: .center has been renamed to .target');\n            return this.target;\n        }\n    },\n    // backward compatibility\n    noZoom: {\n        get: function () {\n            console.warn('THREE.OrbitControls: .noZoom has been deprecated. Use .enableZoom instead.');\n            return !this.enableZoom;\n        },\n        set: function (value) {\n            console.warn('THREE.OrbitControls: .noZoom has been deprecated. Use .enableZoom instead.');\n            this.enableZoom = !value;\n        }\n    },\n    noRotate: {\n        get: function () {\n            console.warn('THREE.OrbitControls: .noRotate has been deprecated. Use .enableRotate instead.');\n            return !this.enableRotate;\n        },\n        set: function (value) {\n            console.warn('THREE.OrbitControls: .noRotate has been deprecated. Use .enableRotate instead.');\n            this.enableRotate = !value;\n        }\n    },\n    noPan: {\n        get: function () {\n            console.warn('THREE.OrbitControls: .noPan has been deprecated. Use .enablePan instead.');\n            return !this.enablePan;\n        },\n        set: function (value) {\n            console.warn('THREE.OrbitControls: .noPan has been deprecated. Use .enablePan instead.');\n            this.enablePan = !value;\n        }\n    },\n    noKeys: {\n        get: function () {\n            console.warn('THREE.OrbitControls: .noKeys has been deprecated. Use .enableKeys instead.');\n            return !this.enableKeys;\n        },\n        set: function (value) {\n            console.warn('THREE.OrbitControls: .noKeys has been deprecated. Use .enableKeys instead.');\n            this.enableKeys = !value;\n        }\n    },\n    staticMoving: {\n        get: function () {\n            console.warn('THREE.OrbitControls: .staticMoving has been deprecated. Use .enableDamping instead.');\n            return !this.enableDamping;\n        },\n        set: function (value) {\n            console.warn('THREE.OrbitControls: .staticMoving has been deprecated. Use .enableDamping instead.');\n            this.enableDamping = !value;\n        }\n    },\n    dynamicDampingFactor: {\n        get: function () {\n            console.warn('THREE.OrbitControls: .dynamicDampingFactor has been renamed. Use .dampingFactor instead.');\n            return this.dampingFactor;\n        },\n        set: function (value) {\n            console.warn('THREE.OrbitControls: .dynamicDampingFactor has been renamed. Use .dampingFactor instead.');\n            this.dampingFactor = value;\n        }\n    }\n});\nexports.orbitControls = function (camera, domElement, renderer, scene) {\n    var controls = new OrbitControls(camera, renderer.domElement);\n    controls.update();\n    var animate = function () {\n        requestAnimationFrame(animate);\n        controls.update();\n        renderer.render(scene, camera);\n    };\n    animate();\n    var resize = function () {\n        var width = domElement.offsetWidth, height = domElement.offsetHeight;\n        renderer.setSize(width, height);\n        camera.aspect = width / height;\n        camera.updateProjectionMatrix();\n    };\n    resize();\n    window.addEventListener('resize', resize);\n};\nexports.default = OrbitControls;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar THREE = require(\"three\");\nvar OrbitControls_1 = require(\"@three/controls/OrbitControls\");\nvar lo024DEgzanMj5BE_1 = require(\"./data/lo024DEgzanMj5BE\");\nvar __global__ = window;\n__global__.THREE = __global__.THREE || THREE;\nvar scene = new THREE.Scene();\nvar camera = new THREE.PerspectiveCamera(75, window.innerWidth / window.innerHeight, 0.1, 100);\ncamera.position.set(0, 0, 35);\nvar renderer = new THREE.WebGLRenderer({ canvas: document.querySelector('#webgl-canvas') });\nrenderer.setSize(window.innerWidth, window.innerHeight);\ndocument.body.appendChild(renderer.domElement);\nvar shape = new THREE.Shape();\nvar shapeEWalls = new THREE.Shape();\nvar line2 = function (d, s) { return d.replace(/[()]/g, '').split(', ')\n    .map(function (p) { return p.split(' ').map(function (n) { return Number(n); }); })\n    .forEach(function (p, i) { return s[!i ? 'moveTo' : 'lineTo'](p[0], p[1]); }); };\nline2(lo024DEgzanMj5BE_1.default.exterior, shape);\nline2(lo024DEgzanMj5BE_1.default.interior, shape);\nline2(lo024DEgzanMj5BE_1.default.exterior, shapeEWalls);\nvar extrudeSettings = { steps: 1, depth: 8, bevelEnabled: false };\nvar geometry = new THREE.ExtrudeGeometry(shape, extrudeSettings);\nvar geometryEFront = new THREE.ExtrudeGeometry(shapeEWalls, extrudeSettings);\nvar geometryEBack = geometryEFront.clone();\ngeometryEBack.faces.forEach(function (face) {\n    var t = face.a;\n    face.a = face.c;\n    face.c = t;\n});\nvar material0 = new THREE.MeshBasicMaterial({ color: 0xc8c8c8, wireframe: false, transparent: true, opacity: 0.7 });\nvar material1 = new THREE.MeshBasicMaterial({ color: 0xc8c8c8, wireframe: false, transparent: true, opacity: 0.2 });\nvar material2 = new THREE.MeshBasicMaterial({ color: 0xc8c8c8, wireframe: false, transparent: true, opacity: 0 });\nvar renderOrder = 99;\nvar meshConfig = function (m) {\n    m.renderOrder = renderOrder++;\n    scene.add(m);\n};\nvar meshEBack = new THREE.Mesh(geometryEBack, [material2, material0]);\nmeshConfig(meshEBack);\nvar mesh = new THREE.Mesh(geometry, [material0, material2]);\nmeshConfig(mesh);\nvar meshEFront = new THREE.Mesh(geometryEFront, [material2, material1]);\nmeshConfig(meshEFront);\nrenderer.render(scene, camera);\nvar meshEBackS = meshEBack.clone();\nmeshEBackS.position.x = -20;\nmeshEBackS.position.y = 0;\nscene.add(meshEBackS);\nvar meshEFrontS = meshEFront.clone();\nmeshEFrontS.position.x = -20;\nmeshEFrontS.position.y = 10;\nscene.add(meshEFrontS);\nvar meshS = mesh.clone();\nmeshS.position.y = 10;\nscene.add(meshS);\nvar meshDefault = new THREE.Mesh(geometry, [material0, material1]);\nmeshDefault.position.y = -10;\nscene.add(meshDefault);\nOrbitControls_1.orbitControls(camera, document.body, renderer, scene);\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.exterior = '(-5.640998038418292 1.985300312885389, -5.641297521598513 2.085400779568926, -5.506137785854445 2.085805153982347, -5.419555954271812 2.110048947576333, -5.385473668260734 2.102318902826595, -5.315721005638293 2.103219021193989, -5.225735972544538 2.162145941101993, -5.133342513639962 2.119812077485137, -5.133450905156799 2.181976267446631, -5.138627035443465 2.192781597545839, -5.138689456016146 2.198772968377908, -5.149262386218254 2.230451151230042, -5.14130027457032 2.254268485843404, -5.155741663649716 2.360830178711035, -4.996188212240556 2.498627756050147, -4.823730825596522 2.500188345255677, -4.733037929001482 2.51141296270616, -4.682962154263427 2.5068965464451, -4.515899091682053 2.51098993028038, -4.265080406075472 2.517135496735944, -3.99226424202365 2.524314970987434, -3.801854276461704 2.523235264726579, -3.553932339429501 2.538672876217165, -3.381569872747782 2.528341468889376, -3.193707062851686 2.532775193911655, -2.815640093874708 2.536735658225003, -2.777597455863476 2.535439054598924, -2.77689772474397 2.535237197361575, -2.737145406463105 2.535711084021572, -2.709216773870964 2.51746429452822, -2.667442593380249 2.509142061060982, -2.620928145133459 2.454884445208323, -2.612399684892896 2.444833149381074, -2.578902962719901 2.397934543457932, -2.567517664081287 2.334546183510681, -2.55751720129185 2.283334947568285, -2.55202258367049 2.241551452244921, -2.547084232105802 2.243409432342134, -2.521280871149662 2.216110188871447, -2.510062815812101 2.219968917651145, -2.499567377274996 2.218513353124708, -2.35727803222887 2.254085046849613, -2.340980693440525 2.224662345892388, -2.225526341371819 2.222479560777578, -2.191667861042844 2.2221127730525, -1.938883590976468 2.2252745260362, -1.849339520387862 2.2199272905413, -1.748641620160896 2.217008499364688, -1.675530479248738 2.215755461350673, -1.550584531116088 2.21597824465393, -1.495004618139554 2.221298989820353, -1.433875684667773 2.21618634088895, -1.37070399870454 2.216298978376273, -1.35784605649523 2.208573841976873, -1.331985053084762 2.205890501121381, -1.288878803437867 2.197396654463244, -1.181708993339509 2.200639943012039, -1.024799022884813 2.198573757353278, -0.9531522461143698 2.186162541752654, -0.9250567917502766 2.166767574759776, -0.9197598358261774 2.165882061758016, -0.898335128895825 2.150480124895714, -0.8905655255006072 2.146908996407197, -0.882254383818791 2.138919891134739, -0.8365581987796438 2.106069511472186, -0.8257730068123819 2.08681029056312, -0.8041947949054393 2.071599423387006, -0.7869262779322017 2.014501425551491, -0.759232357118557 1.973710929782059, -0.7524777358862641 1.658358397144136, -0.7556821292344225 1.645396111999865, -0.723963170206759 1.647272603517552, -0.5648114274846332 1.648009170613714, -0.414190348556364 1.645009447051982, -0.2924918165270937 1.645583568165925, -0.07928332888133613 1.653027308788777, 0.1400977284161362 1.657595556580089, 0.2985507804319886 1.650319947052665, 0.552493946139169 1.64034783414385, 0.601347477369238 1.639698435541793, 0.7716188326024725 1.63949707625483, 0.9384576179604093 1.635407925605191, 1.092541939537593 1.635905674510962, 1.38800253377045 1.63069045578976, 1.764320194290284 1.628667268495925, 1.861376768048538 1.622757708860865, 2.081117504985067 1.621231842689707, 2.087106338554476 1.615334689994706, 2.278926265443402 1.618419448073605, 2.283633377871098 1.616207100745067, 2.334487368135237 1.625863482741093, 2.515732126320818 1.62621501755344, 2.692506006302402 1.6125372877773, 2.83715597902476 1.603856413198619, 3.038644537392011 1.605751559052043, 3.191587026557974 1.59735719647227, 3.431770156735768 1.591098362940151, 3.443099718154996 1.590984843111989, 3.455898342781188 1.589507933038997, 3.53983136097014 1.583641745161551, 3.542743048809025 1.580535992791662, 3.579269539516037 1.603988687586006, 4.009542413412209 1.60187335258621, 4.08314693101346 1.58259365323939, 4.148147045548466 1.581195788930171, 4.281526746292787 1.579177078608167, 4.538673144811835 1.575273403867857, 4.644702722791563 1.573411951903674, 4.651428169010453 1.70591986890779, 4.653177155864336 1.756267777125549, 4.655715501035576 1.80601822896344, 4.661585736146067 1.944916208928127, 4.665778851777935 2.040260079546119, 4.669381899801258 2.128792467351107, 4.673460793725707 2.187562002383447, 4.675619817632225 2.22848596428325, 4.67679834890775 2.259031587457972, 4.67351909277231 2.354933870179112, 4.737832744405207 2.451404347449814, 4.742677796645538 2.454101773343875, 4.792695322231895 2.53307512539727, 4.95697548950763 2.523411905089666, 4.974559098367753 2.519185002385909, 4.975589388492685 2.519136331946177, 5.264945146725146 2.511328507975675, 5.404341871722846 2.507636520728042, 5.569324385463802 2.503685464230752, 5.624212792477734 2.496440747239147, 5.712138379030558 2.508737780910164, 5.75087476239486 2.503344381040869, 5.7541518004256 2.503256294943479, 5.819270193798975 2.497337033173391, 5.841456733014629 2.484339669126717, 5.84910161113756 2.485597665144102, 5.866225830147873 2.487500255334484, 5.878199948752204 2.487932938768832, 5.889466630055367 2.490657353105414, 5.924974378568598 2.489828326194685, 5.928133536927011 2.489967206673068, 6.018118034261966 2.488592355774984, 6.025236608105879 2.487619853748656, 6.043387417751301 2.487168769637103, 6.080942883464462 2.477454924774865, 6.087494621451901 2.475050143843088, 6.131633615079805 2.461896397591356, 6.291675514925143 2.363049959426364, 6.251349423442829 2.22903786180771, 6.292946583425145 2.226197014756397, 6.312714070174729 2.2277716941687, 6.388658881355595 2.23282904915673, 6.49028143487144 2.157767123354693, 6.522373816359291 2.10168761175714, 6.543773048764252 2.075874418739615, 6.55379011537987 2.004514758263755, 6.559331869804453 1.877871950188455, 6.552767380075045 1.754132127382021, 6.543473761962425 1.606199152724437, 6.542095418363687 1.478980455088185, 6.541390055096089 1.317250099917413, 6.537488741018375 1.148668438823065, 6.528439254776609 0.9610150013017335, 6.527532394406217 0.8888318635010011, 6.512142594236455 0.7741352758478961, 6.512093664928547 0.7728019807289772, 6.509412113260558 0.6803926413000854, 6.50670022964 0.591132495420419, 6.50670022964 0.5617133130618743, 6.509054354920186 0.4081895555875678, 6.503461187569022 0.2503950072494568, 6.499177858130825 0.1410034140149268, 6.50695880120557 0.1284982829705301, 6.509509090914201 0.09817824396118981, 6.551982252185842 -0.0007296592991191921, 6.490985425505047 -0.06822244063369037, 6.486844666199205 -0.1739729489210973, 6.361968575232929 -0.1865690730334817, 6.361554490023525 -0.1869427528458275, 6.24458367673711 -0.1983717059087497, 5.899302627473288 -0.1915765606073933, 5.849594388808514 -0.3073293126507811, 5.641247986350691 -0.2371969307693817, 5.503015911067275 -0.2285150335452187, 5.502999973300001 -0.2344294775074564, 5.502999973300001 -0.268528573939971, 5.502109358423277 -0.3518714208508602, 5.502095838584093 -0.3553577114858749, 5.501837777047429 -0.3783997996354737, 5.501581501412153 -0.4012388135612602, 5.501480241456804 -0.4073870409848947, 5.500121928776705 -0.5214955130016109, 5.500313284354663 -0.5755005723396692, 5.499163712731145 -0.6064355232601607, 5.498485884007065 -0.6588992344224319, 5.497986344972467 -0.7044188359733911, 5.496384904657132 -0.8344529252602106, 5.494686443675474 -0.9667710443870986, 5.494586327984784 -0.9761491436465303, 5.493984433750623 -1.023107718524802, 5.492185054561572 -1.169852215633772, 5.49173827513665 -1.204252577223469, 5.490884784069041 -1.277290289743026, 5.49013456141839 -1.334040281654777, 5.489387217667102 -1.39827075620927, 5.487489152850728 -1.569678273502611, 5.487090409858516 -1.610742029835372, 5.485791467538317 -1.738753579557257, 5.485191385119089 -1.81028001773146, 5.483887155017912 -1.93555414076099, 5.482468962551733 -2.052454306005764, 5.481415258844173 -2.093909478122913, 5.480658189255568 -2.165831346441086, 5.480598875185297 -2.231106903258693, 5.478980508794261 -2.354082254391643, 5.476278450279392 -2.538332627525837, 5.474136184436203 -2.676393569902048, 5.474273365525137 -2.690214273607445, 5.481858646009571 -2.971774459358678, 5.470486876428962 -3.011415579886838, 5.47028817253071 -3.030770024218597, 5.470064562934211 -3.050324571954583, 5.474638484733544 -3.087732954569201, 5.473472960733763 -3.456970908511089, 5.464347919310665 -3.563429489207124, 5.464191673165408 -3.582157683546213, 5.462786411898264 -3.719472194410064, 5.462182584148021 -3.76423098651985, 5.461104064681301 -3.848350596491904, 5.461798713817892 -4.057937076617622, 5.462235791343759 -4.238172539500167, 5.388208952879489 -4.360264125887691, 5.261357404499244 -4.442345237033845, 5.198074250918542 -4.419553028539807, 5.185254132672293 -4.420159197408173, 5.02410145395264 -4.414723730360287, 5.024371201898727 -4.483026064560445, 5.0348795573223 -4.62719377032967, 5.035195324378955 -4.637604476724337, 5.088662929285284 -4.709823805053215, 5.039577444258534 -4.782081116398915, 5.04198946953964 -4.861604569488224, 4.961342211829537 -4.89724892159296, 4.944296379743444 -4.922341594322567, 4.882029138794982 -4.932303592813406, 4.839127599896202 -4.951265149647813, 4.552866729705821 -4.949468380369228, 4.445473387857066 -4.944089046246305, 4.311828707892552 -4.943794093200216, 4.125385396440627 -4.938665142289128, 3.859487403078529 -4.93530324535067, 3.622633421332663 -4.935899216449508, 3.375321390903724 -4.936595866716143, 3.114239148517482 -4.940354899167462, 2.898891869940982 -4.932168145482782, 2.647278610966836 -4.936678937317865, 2.494218977516904 -4.799145674804398, 2.49517301958463 -4.652495176860922, 2.486245698785196 -4.620249189172349, 2.48950623715122 -4.502593831719994, 2.496295564407863 -4.489042500788323, 2.499479015623269 -4.400704129272652, 2.267740499569389 -4.401235257020285, 2.262682894020673 -4.401300144199981, 2.168238323588855 -4.40130014419998, 2.11699487071502 -4.359699834003442, 2.099070750447917 -4.373210729933859, 2.036467093973072 -4.396227119045436, 1.972943617602269 -4.399768030498531, 1.953363690729922 -4.399880475025875, 1.935913261964426 -4.400308542271314, 1.900032553349881 -4.400186747608886, 1.880542747073214 -4.400298674591324, 1.862961208420943 -4.4003458854784, 1.765633373621784 -4.401195114519629, 1.65512046510665 -4.401814976058445, 1.59305945450074 -4.408092803860293, 1.296310064038891 -4.408299806515545, 1.114794773903017 -4.409099089526459, 0.8556123730245012 -4.409499375836139, 0.6202772250793269 -4.410200520256551, 0.2743668618087566 -4.409402501460734, 0.1752385108256837 -4.410401303971376, -0.03617786945854894 -4.410149623562968, -0.1897373956871671 -4.40996716698765, -0.3554377806412875 -4.410698089340701, -0.6949079780874852 -4.412195529156409, -0.9202176232189827 -4.414563412476455, -0.9491202503500692 -4.412816745573338, -0.9699942892849009 -4.409740472973787, -1.03970073667868 -4.411991131824528, -1.055364766988654 -4.412033648769052, -1.073778176325677 -4.413341871720104, -1.10999830301086 -4.414149567023162, -1.18644991525435 -4.412446033252383, -1.27347845440489 -4.412159507169254, -1.278423115361029 -4.411546478725081, -1.289911324799897 -4.411602987503664, -1.297648387485396 -4.409968252247852, -1.422860465217425 -4.407178212954451, -1.455056663379315 -4.331713358831747, -1.501233909944329 -4.247939212290561, -1.509156251517745 -4.235980725530567, -1.532223137708272 -4.212469301172382, -1.558119042318367 -4.065270911873802, -1.537806518437591 -3.929739352233121, -1.537844862430243 -3.841716074884198, -1.623532510110267 -3.799643347176841, -1.858629511213413 -3.802102778452801, -2.111704729428839 -3.801405329961502, -2.379331927690706 -3.806680289542549, -2.421482037007751 -3.807100662745524, -2.41169706210206 -4.017916032387103, -2.405010060122994 -4.175204411308702, -2.459144230303572 -4.291510518818982, -2.585241467018272 -4.376449423709202, -2.928884642574868 -4.374483900492438, -3.003581599705378 -4.372382333331138, -3.094678506212962 -4.375053225962633, -3.235495693099691 -4.377293397875377, -3.503604791897575 -4.378402183399433, -3.695822595617403 -4.377405791853734, -3.938823461947785 -4.380068397611415, -4.140100241798619 -4.385868810445682, -4.246863589192076 -4.545950205802276, -4.386947069233995 -4.33167945613422, -4.452620171563845 -4.30851491508913, -4.477463893269382 -4.126843441570709, -4.485177097730352 -4.058967487486949, -4.480461561537012 -3.757504855000074, -4.481441675948725 -3.69319780657758, -4.488088650331376 -3.687358620396314, -4.502437351573381 -3.455171287788781, -4.501064884497302 -3.227611515595016, -4.497266376462361 -3.162015240162646, -4.507395827881293 -2.942022884726256, -4.499318818588122 -2.553715499425179, -4.500088083336874 -2.467809452180699, -4.502038852496898 -2.319361059503969, -4.498495233451283 -2.199383725935551, -4.49829994583966 -2.079932108165398, -4.498574589032799 -1.792862177664226, -4.499200057980001 -1.721678696671829, -4.49920005798 -1.604191035003644, -4.500196571053203 -1.459985091089877, -4.500797355447173 -1.338398246152698, -4.501603021691481 -1.178600732103261, -4.501208202108849 -1.11317032803973, -4.502798857528355 -0.9973798209500356, -4.502999082011148 -0.7891730004300703, -4.504699292999335 -0.6057320982369754, -4.504798885343703 -0.4531049285920728, -4.505904497714655 -0.3902796256132171, -4.505696974005756 -0.3072998165050359, -4.505134479796324 -0.2579648380348995, -4.544009758592942 -0.2552587039760146, -4.56808065964066 -0.2812600070594704, -4.610732710249169 -0.2676770145431192, -4.636521333570863 -0.2855499898267562, -4.704341388442095 -0.2510594241100886, -4.813293286722005 -0.2671561967686175, -4.84178986210197 -0.1947931371408024, -4.995722988326047 -0.1993037503065386, -5.026337473515841 -0.200206601187526, -5.025252075416747 -0.2216657917201743, -5.408624391784419 -0.2646689796462403, -5.449084859869368 -0.1924310933989111, -5.500965700182729 -0.1643868866986825, -5.603113632365104 -0.07513328534766604, -5.627400553262889 0.06855174491226473, -5.630442553919004 0.3245251727586259, -5.639351907239411 0.5085971381826189, -5.639619351846036 0.5138053031631067, -5.640117814186294 0.5454648658659726, -5.639823120611231 0.5717943334627866, -5.640299987789996 0.5946652060716301, -5.640299987789996 0.6266298498115699, -5.639674348617152 0.6406510409262118, -5.639519270452845 0.6461619832636062, -5.63959999084 0.6480689302550485, -5.63959999084 0.6725960995558729, -5.639706299407853 0.6995830339142352, -5.63948837246657 0.7134897553451086, -5.633039862540653 0.803877681847435, -5.634795400263796 1.11839121741265, -5.637491092981241 1.435302223684894, -5.640097060103703 1.684153685234216, -5.640499436437082 1.818645574640534, -5.720850004853557 1.924935947761099, -5.640998038418292 1.985300312885389)';\nexports.interior = '(-5.44070005417 1.88600003719, -5.44010019302 1.68550002575, -5.4375 1.43719995022, -5.43480014801 1.11979997158, -5.43300008774 0.7973099947, -5.43959999084 0.70480000973, -5.43970012665 0.69840997458, -5.43959999084 0.67299002409, -5.43959999084 0.65230000019, -5.43940019608 0.64758002758, -5.43979978561 0.63337999582, -5.44029998779 0.62216997147, -5.44029998779 0.59675002098, -5.43979978561 0.57275998592, -5.44010019302 0.54592001438, -5.43970012665 0.52051001787, -5.43959999084 0.5185599923100001, -5.43050003052 0.33054998517, -5.42759990692 0.08651500195, -5.41779994965 0.0285369996, -5.38619995117 0.00092592998, -5.38189983368 -0.00139850006, -5.35284116148 -0.00053425507, -5.35042949295 -0.00070161563, -5.3252183546 -0.00430752096, -5.30713584465 -0.03659192986, -5.30719995499 -0.0380080007, -5.30593886727 -0.03872900636, -5.29899978638 -0.05111800134, -5.23449993134 -0.04388299957, -5.23620619435 -0.01014881203, -5.15811017828 -0.00400575331, -5.00159978867 0.0006098899799999999, -4.83589982986 0.00546529982, -4.73986619962 0.00859459414, -4.73456330215 0.0080699603, -4.7015576161 -0.00947113259, -4.69847163297 -0.01289644259, -4.68540000916 -0.04608999938, -4.67050534392 -0.04388943157, -4.65229988098 -0.05314800143, -4.64454889407 -0.04777612889, -4.64147446276 -0.0479901421, -4.62849998474 -0.0521220006, -4.62569195175 -0.04908877319, -4.61999988556 -0.04948500171, -4.62160149481 -0.04467027594, -4.6139998436 -0.03645899892, -4.60345293139 0.01523804611, -4.6018449576 0.01568579798, -4.53504879184 0.01829694989, -4.46376739112 0.02050706177, -4.36789989471 0.0229770001, -4.17609977722 0.02872600034, -4.0515999794 0.03265700117, -3.88000011444 0.03721800074, -3.77909994125 0.03977100179, -3.45760011673 0.0492159985, -3.12498092156 0.05805186889, -3.10479998589 0.05778999999, -3.0311999321 0.05555099994, -3.01534704774 0.05637785122, -2.85750007629 0.05388600007, -2.82145832272 0.06709427391, -2.77427204401 0.06815831729000001, -2.75456405328 0.06836055121, -2.73245994799 0.06726826966, -2.72005706346 0.06541874496, -2.70720005035 0.05659500137, -2.67470002174 0.05637700111, -2.64869999886 0.06725600362, -2.64369296174 0.07216330612999999, -2.62439990044 0.07405900209999999, -2.61890006065 0.07692299783000001, -2.61640710893 0.08658037842999999, -2.61590003967 0.08678299934, -2.61279988289 0.08814100176, -2.60282035929 0.11017152206, -2.59870004654 0.11546000093, -2.59843397741 0.11687701634, -2.59010004997 0.12738999724, -2.58759999275 0.16938999295, -2.58979988098 0.22290000319, -2.59540009499 0.29807001352, -2.59803018768 0.31836427835, -2.6047000885 0.42103001475, -2.61050009727 0.48875999451, -2.61820006371 0.59021997452, -2.6208999157 0.6191899776499999, -2.62560009956 0.67685997486, -2.62879991531 0.70915997028, -2.63960003853 0.84255999327, -2.64260005951 0.88396000862, -2.64995425778 0.9823774481500001, -2.64586631883 1.00745262343, -2.63640029693 1.01249242997, -2.60929989815 1.00469994545, -2.60078654154 1.00553293261, -2.58909988403 1.00220000744, -2.58538593706 1.00289085872, -2.58389997482 1.00259995461, -2.57077123699 1.00560941781, -2.5453257277 1.01034267408, -2.52735430459 1.00908420518, -2.52710008621 0.98808997869, -2.52449989319 0.69827997684, -2.52250003815 0.4135800004, -2.51659989357 0.25317999721, -2.51419997215 0.09491100162, -2.51140495394 0.09036267151000001, -2.50925016403 0.08369550109, -2.50629997253 0.07456800342, -2.50046167126 0.06473046776999999, -2.50029993057 0.06366500258, -2.49917021886 0.06255437092, -2.49189996719 0.05030399933, -2.46770000458 0.06307800114000001, -2.42333461833 0.07681945777, -2.42274204882 0.07693056758, -2.39651627376 0.05919795614, -2.39689472778 0.04704032692, -2.40669989586 0.00737599982, -2.41440010071 -0.05006499961, -2.39595347578 -0.07182944775, -2.39650011063 -0.11020000279, -2.39422670054 -0.13706105111, -2.65240001678 -0.13085000217, -2.85339999199 -0.12973499298, -3.05439996719 -0.12861999869, -3.28959989548 -0.1270250082, -3.52480006218 -0.12543000281, -3.72433850197 -0.12609088044, -3.85365009308 -0.12465000153, -4.08249998093 -0.12210000306, -4.13079977036 -0.12156999856, -4.25710010529 -0.12138000131, -4.26280021667 -0.12242999673, -4.27250003815 -0.12646999955, -4.30100011826 -0.14208999276, -4.30429983139 -0.18590000272, -4.30569982529 -0.3086900115, -4.30590009689 -0.38877001405, -4.30480003357 -0.45127999783, -4.30469989777 -0.60474002361, -4.3029999733 -0.7881500124900001, -4.30280017853 -0.99590998888, -4.30119991302 -1.11240005493, -4.3015999794 -1.17869997025, -4.30079984665 -1.33739995956, -4.3001999855 -1.45879995823, -4.29920005798 -1.60350000858, -4.29920005798 -1.72080004215, -4.29857542965 -1.79188785403, -4.29829978943 -2.07999992371, -4.29850006104 -2.2025001049, -4.30200004578 -2.32100009918, -4.3000998497 -2.46560001373, -4.29930019379 -2.55489993095, -4.30730009079 -2.93950009346, -4.29699993134 -3.16319990158, -4.30109977722 -3.23399996758, -4.30240011215 -3.44959998131, -4.2936000824 -3.59200000763, -4.28281643879 -3.6014731452, -4.27992739703 -3.79102830951, -4.28100013733 -3.79349994659, -4.28499984741 -4.04920005798, -4.27899980545 -4.10200023651, -4.27099990845 -4.16050004959, -4.25347708849 -4.1666807852, -4.24914212476 -4.17572317233, -4.24910020828 -4.17630004883, -4.2487363982 -4.17656948543, -4.24690008163 -4.18039989471, -4.24520015717 -4.18300008774, -4.24480009079 -4.18240022659, -4.24029148159 -4.18090009689, -4.23877454609 -4.18090009689, -4.23371677628 -4.18262476611, -4.22039985657 -4.18809986115, -4.21589994431 -4.18870019913, -4.20775086657 -4.18773534139, -3.94280004501 -4.18009996414, -3.69639992714 -4.17740011215, -3.50349998474 -4.17840003967, -3.23749995232 -4.17729997635, -3.0992000103 -4.1750998497, -3.00370001793 -4.17229986191, -2.92549991608 -4.17449998856, -2.64580011368 -4.17609977722, -2.617000103 -4.15670013428, -2.60689997673 -4.13500022888, -2.6115000248 -4.02680015564, -2.62159991264 -3.80920004845, -2.63809990883 -3.64560008049, -2.641299963 -3.63499999046, -2.63763986549 -3.60924651058, -2.38229990005 -3.60669994354, -2.11339998245 -3.60139989853, -1.85940003395 -3.60209989548, -1.58220005035 -3.5992000103, -1.57862684935 -3.5988843498, -1.55110001564 -3.61240005493, -1.53262339037 -3.59584635891, -1.53209996223 -3.59559988976, -1.52919995785 -3.5938000679, -1.52892440291 -3.59250576996, -1.52820003033 -3.59179997444, -1.52595178223 -3.57854319393, -1.52590000629 -3.57829999924, -1.52589683296 -3.57821918589, -1.52530002594 -3.57470011711, -1.52444807238 -3.54900799008, -1.51960003376 -3.53040003777, -1.52020001411 -3.38120007515, -1.51979994774 -3.33800005913, -1.51950001717 -3.24379992485, -1.51970005035 -3.17720007896, -1.51919996738 -3.01950001717, -1.51951409254 -2.95903193156, -1.51905400221 -2.77985871866, -1.51830005646 -2.72659993172, -1.51670002937 -2.6916000843, -1.51769995689 -2.60549998283, -1.51680004597 -2.46020007133, -1.51779997349 -2.40599989891, -1.51709997654 -2.26589989662, -1.51670002937 -2.12430000305, -1.51670002937 -1.96249997616, -1.51730000973 -1.95809996128, -1.51610004902 -1.78480005264, -1.51569998264 -1.56219995022, -1.51540005207 -1.31350004673, -1.5161999464 -1.20850002766, -1.51600003242 -1.14400005341, -1.51590001583 -1.08980000019, -1.51569998264 -0.95607000589, -1.51510000229 -0.87664997578, -1.51450002193 -0.76779997349, -1.51440000534 -0.58017998934, -1.51460003853 -0.46819001436, -1.5150642399 -0.43775152333, -1.5134999752 -0.34064999223, -1.51100003719 -0.14279000461, -1.51049995422 0.02994900011, -1.51890003681 0.07368200272, -1.50860766757 0.08565953767999999, -1.42820000648 0.08985199779, -1.3736000061 0.08405900002, -1.35450005531 0.05177599937, -1.35080003738 -0.03559999913, -1.3504999876 -0.07894399762, -1.35010004044 -0.2668800056, -1.34850001335 -0.42298999429, -1.34909999371 -0.52042001486, -1.34889996052 -0.60355997086, -1.34809994698 -0.69846999645, -1.34730005264 -0.80766999722, -1.3465000391 -0.92874997854, -1.34560000896 -0.99611997604, -1.34459996223 -1.22650003433, -1.34290003777 -1.45850002766, -1.34440004826 -1.6603000164, -1.34130001068 -1.77219998837, -1.3409999609 -1.90639996529, -1.34089994431 -2.06049990654, -1.33920001984 -2.26679992676, -1.33940005302 -2.46149992943, -1.34360003471 -2.57450008392, -1.3368999958 -2.90289998055, -1.33619999886 -3.0243999958, -1.33490002155 -3.23140001297, -1.33949995041 -3.40549993515, -1.33510005474 -3.6263999939, -1.33790004253 -3.71499991417, -1.33780002594 -3.94460010529, -1.35549998283 -4.06269979477, -1.34599995613 -4.11670017242, -1.33696044391 -4.12591389143, -1.3357000351 -4.13329982758, -1.33309996128 -4.13959980011, -1.33000865312 -4.14426601746, -1.30050003529 -4.19780015945, -1.29345662468 -4.20082621412, -1.28949999809 -4.21010017395, -1.2745493561 -4.21043331177, -1.26950001717 -4.21150016785, -1.2665626883 -4.21148571957, -1.26080000401 -4.21220016479, -1.18389275629 -4.21245336831, -1.11000001431 -4.21409988403, -1.08309996128 -4.21350002289, -1.06279779464 -4.21205602316, -1.06273162873 -4.21205290793, -1.04320001602 -4.21199989319, -0.95043687012 -4.20900478724, -0.9476187801 -4.20951105597, -0.94204002619 -4.21169996262, -0.9289764927 -4.21306429183, -0.92847001553 -4.21369981766, -0.91522997618 -4.21449995041, -0.69639998674 -4.21220016479, -0.35631999373 -4.2107000351, -0.1900596867 -4.20996664287, -0.03594000638 -4.21014976501, 0.17434999347 -4.21040010452, 0.27358999848 -4.209400177, 0.62020999193 -4.21019983292, 0.85515999794 -4.20949983597, 1.11419999599 -4.20909976959, 1.29579997063 -4.20830011368, 1.5829000473 -4.20809984207, 1.6444712518 -4.20187156097, 1.76419997215 -4.20120000839, 1.86182016197 -4.20034822842, 1.87969994545 -4.20030021667, 1.89979771453 -4.20018479825, 1.93379998207 -4.20030021667, 1.9503368391 -4.19989455977, 1.96679997444 -4.1998000145, 1.99549996853 -4.19820022583, 2.00230002403 -4.19570016861, 2.02220010757 -4.18069982529, 2.02010011673 -4.1388001442, 2.01979994774 -4.10360002518, 2.01967539193 -4.08718241651, 2.02060008049 -4.01420021057, 2.0218000412 -3.84599995613, 2.02270007133 -3.6154999733, 2.0232000351 -3.43300008774, 2.02335582834 -3.34421260899, 2.03480005264 -3.28539991379, 2.02384350585 -3.11519321193, 2.02399992943 -3.04329991341, 2.02413898334 -3.01854652637, 2.02760004997 -2.97860002518, 2.02466856395 -2.87933990837, 2.02477986183 -2.82987732696, 2.02859997749 -2.69849991798, 2.02819991112 -2.54649996758, 2.02688765319 -2.46297278482, 2.02710008621 -2.43740010262, 2.02810001373 -2.28060007095, 2.02760004997 -2.21009993553, 2.02769994736 -2.07119989395, 2.02839994431 -1.97440004349, 2.02889990807 -1.76820003986, 2.03110003471 -1.41729998589, 2.03159999847 -1.18449997902, 2.0313000679 -1.15369999409, 2.03299999237 -1.07539999485, 2.03200006485 -1.02869999409, 2.03122563701 -0.9666495979600001, 2.03299999237 -0.93967998028, 2.03419995308 -0.78880000114, 2.03329992294 -0.61167997122, 2.03390002251 -0.47440999746, 2.03320002556 -0.36590000987, 2.03349995613 -0.25835001469, 2.03550004959 -0.09430799633, 2.03600001335 -0.0032744999, 2.0367000103 0.03463700041, 2.03555530246 0.09982915746, 2.06672117293 0.1131135343, 2.18904056934 0.11232760111, 2.20951825307 0.11145228149, 2.20989673713 0.11099455989, 2.21706715452 0.09855181688, 2.21939992905 0.08535200357, 2.21622185392 0.05448359343, 2.21379995346 0.0416629985, 2.21275902564 -0.14095537626, 2.2039000988 -0.14242999256, 2.19939994812 -0.35938999057, 2.20079994202 -0.67409998178, 2.20580005646 -0.85606998205, 2.20740008354 -1.00310003757, 2.20399999619 -1.15409994125, 2.1944000721 -1.40450000763, 2.21040010452 -1.51750004292, 2.21103905746 -1.5370610254, 2.21105071218 -1.53824075463, 2.21129989624 -1.57309997082, 2.21140003204 -1.58934431899, 2.21140003204 -1.60710000992, 2.21165355733 -1.63047199827, 2.21210002899 -1.70290005207, 2.21226720099 -1.70650341692, 2.21289992332 -1.8111000061, 2.21350002289 -1.98849999905, 2.21479988098 -2.09602185294, 2.21479988098 -2.13919997215, 2.21510004997 -2.17309999466, 2.21554613249 -2.20122731935, 2.21510004997 -2.32139992714, 2.21650004387 -2.47119998932, 2.21460008621 -2.51999998093, 2.21539998055 -2.73519992828, 2.21690011024 -2.90420007706, 2.21609997749 -3.05590009689, 2.21700000763 -3.19029998779, 2.21510004997 -3.33680009842, 2.2162001133 -3.57209992409, 2.21840000153 -3.80970001221, 2.2146999836 -4.03749990463, 2.19810009003 -4.11770009995, 2.195499897 -4.13479995728, 2.21210002899 -4.17929983139, 2.2392001152 -4.2013001442, 2.25985785214 -4.20125279818, 2.26139998436 -4.2013001442, 2.26622840864 -4.20123819733, 2.52254534446 -4.20065073764, 2.53329992294 -4.20090007782, 2.56349121635 -4.2005568927, 2.62136163899 -4.20042425792, 2.6708113664 -4.2037507036, 2.69649727432 -4.24980205456, 2.69932323856 -4.27448517067, 2.70265177678 -4.31626493108, 2.69619989395 -4.49529981613, 2.69592812593 -4.53707461494, 2.68819999695 -4.55249977112, 2.68700003624 -4.59579992294, 2.69534987752 -4.62596002194, 2.69479990005 -4.71049976349, 2.72239995003 -4.73530006409, 2.90089988708 -4.73210000992, 3.11660003662 -4.74030017853, 3.3736000061 -4.73659992218, 3.62210011482 -4.73589992523, 3.86050009727 -4.73530006409, 4.12939977646 -4.73869991302, 4.31479978561 -4.74380016327, 4.45069980621 -4.74410009384, 4.55849981308 -4.74949979782, 4.79750013351 -4.75099992752, 4.82486331548 -4.73890599002, 4.82740020752 -4.73850011826, 4.82809468885 -4.73747779253, 4.83799982071 -4.73309993744, 4.8377035747 -4.72333283182, 4.84350013733 -4.71479988098, 4.83718608502 -4.70627141561, 4.83510017395 -4.63749980927, 4.82439994812 -4.49069976807, 4.82359981537 -4.28809976578, 4.82512137628 -4.20917658039, 4.83080005646 -4.20060014725, 4.93190002441 -4.21150016785, 5.18389987946 -4.21999979019, 5.2283920726 -4.21789608242, 5.23589992523 -4.22060012817, 5.24100017548 -4.2172999382, 5.26210021973 -4.18249988556, 5.26179981232 -4.05859994888, 5.26109981537 -3.84739995003, 5.26219987869 -3.76160001755, 5.26280021667 -3.71709990501, 5.26420021057 -3.5803000927, 5.2644192846 -3.55404113442, 5.27349996567 -3.44810009003, 5.27460002899 -3.09960007668, 5.26992521986 -3.06136657461, 5.2702999115 -3.02859997749, 5.27077535392 -2.98229024762, 5.2810997963 -2.94630002975, 5.27430009842 -2.69390010834, 5.274120783 -2.67583446016, 5.27629995346 -2.53539991379, 5.27899980545 -2.35130000114, 5.28060007095 -2.2297000885, 5.28065914572 -2.16468788334, 5.28144200759 -2.09031573952, 5.28249979019 -2.04870009422, 5.28389978409 -1.93330001831, 5.28520011902 -1.8084000349, 5.28579998016 -1.73689997196, 5.28709983826 -1.6088000536, 5.28749990463 -1.56760001183, 5.28940010071 -1.39600002766, 5.29014994131 -1.33155496139, 5.29090023041 -1.27479994297, 5.29175345206 -1.20178528593, 5.2922000885 -1.16740000248, 5.29400014877 -1.02059996128, 5.29460000992 -0.97380000353, 5.29470014572 -0.96442002058, 5.29640007019 -0.83199000359, 5.29799985886 -0.7020900249499999, 5.29850006104 -0.65650999546, 5.29921170016 -0.60142937123, 5.30030012131 -0.57213997841, 5.30010124349 -0.5225078292599999, 5.30011771107 -0.52065950452, 5.3014998436 -0.40454998612, 5.3015999794 -0.39847001433, 5.30185031891 -0.3761600256, 5.30210018158 -0.35385000706, 5.30211350234 -0.35041505193, 5.3029999733 -0.26745998859, 5.3029999733 -0.23416000605, 5.3031001091 -0.1969999969, 5.30259266535 -0.19064959224, 5.30258026147 -0.19042622244, 5.30244013166 -0.18746201127, 5.30210018158 -0.17152999341, 5.3015999794 -0.16968999803, 5.30022970628 -0.16755719555, 5.29460000992 -0.15559999645, 5.29199981689 -0.14944000542, 5.28835769191 -0.14774767884, 5.28389978409 -0.14214000106, 5.25390005112 -0.13603000343, 5.2484998703 -0.1353199929, 5.22028673747 -0.13595514534, 5.01838163164 -0.13775681435, 4.99169317905 -0.13785237155, 4.82910013199 -0.1380199939, 4.64900016785 -0.13790999353, 4.45469999313 -0.13858999312, 4.38702735641 -0.14022043077, 4.35561813786 -0.14024470234, 4.28299999237 -0.14005999267, 4.14149999619 -0.13993999362, 4.09569978714 -0.14003999531, 3.95720005035 -0.14020000398, 3.80259990692 -0.13991999626, 3.75200009346 -0.14003999531, 3.55290007591 -0.13935999572, 3.44409990311 -0.1399500072, 3.32080006599 -0.14128999412, 3.24830007553 -0.14018000662, 3.17720007896 -0.14014999568, 3.1441551734 -0.14015667054, 3.13648547048 -0.12724814272, 3.1400001049 -0.09759400040000001, 3.14319992065 -0.07604700327, 3.14358040565 -0.05341488626, 3.14660000801 -0.042084001, 3.1466999054 -0.01434000023, 3.14597224642 -0.009649351529999999, 3.14800000191 0.020211, 3.14599990845 0.03587700054, 3.14109520446 0.04960572185, 3.15347965469 0.08866377262, 3.22329998016 0.08706799895, 3.40429997444 0.07876499742, 3.41561128898 0.08796131553, 3.45782306888 0.08764095959, 3.52361725911 0.08627529567, 3.5708232746 0.08505126496, 3.59220004082 0.07137300074, 3.74429988861 0.07219500095, 3.8914000988 0.06189100072, 4.00320005417 0.06145599857, 4.07444232235 0.06846932460000001, 4.28509998322 0.06162599847, 4.44259977341 0.05944800004, 4.51779985428 0.05915300176, 4.57264931722 0.05730949384, 4.6451997757 0.04134999961, 4.89489984512 0.03846799955, 5.13000011444 0.03500699997, 5.18389987946 0.03207200021, 5.37779998779 0.02153800055, 5.47109985352 0.02930199914, 5.60087821825 0.01922729555, 5.63009977341 0.01140199974, 5.62130022049 -0.03554999828, 5.68706410906 -0.03968040955, 5.6939997673 -0.04392699897, 5.73859977722 -0.05894000083, 5.74529981613 -0.04333800077, 5.75089979172 0.01132499985, 5.79544124132 0.01422096214, 5.84829998016 0.009465900249999999, 6.23680019379 0.00182020001, 6.27650022507 0.00569920009, 6.27665679806 0.00584049508, 6.29379987717 0.00756970001, 6.29406286343 0.01428608428, 6.29619979858 0.01453199983, 6.31759977341 0.03821099922, 6.31629991531 0.04123799875, 6.31303430752 0.04787102473, 6.31169986725 0.06373599917, 6.29692866365 0.08747551698, 6.30359983444 0.25784999132, 6.30900001526 0.41019999981, 6.30670022964 0.56018000841, 6.30670022964 0.59416997433, 6.30950021744 0.68633002043, 6.31220006943 0.7793700099, 6.31263204128 0.79114099101, 6.32770013809 0.90343999863, 6.32849979401 0.96709001064, 6.33760023117 1.15579998493, 6.34140014648 1.32000005245, 6.34210014343 1.48049998283, 6.34354174678 1.6135574446, 6.353099823 1.76569998264, 6.35909986496 1.87880003452, 6.35440015793 1.98619997501, 6.35360002518 1.99189996719, 6.3479180739 1.99875391888, 6.34709978104 2.00530004501, 6.33760023117 2.02189993858, 6.32880020142 2.02839994431, 6.3274041386 2.02822089948, 6.32730007172 2.02830004692, 6.29408004966 2.02565373758, 6.14619041913 2.03575374972, 6.05900001526 2.04539990425, 6.04875659225 2.04788395204, 6.03660011292 2.07990002632, 6.04559993744 2.21499991417, 6.04655520215 2.23204514751, 6.04839992523 2.24079990387, 6.04855891664 2.24920381291, 6.05590009689 2.27360010147, 6.0490679067 2.2761078209, 6.04909992218 2.27780008316, 6.02441743511 2.28515564669, 6.02129983902 2.28629994392, 6.01550006866 2.28780007362, 6.00916704743 2.28795746193, 6.00299978256 2.28880000114, 5.9310002327 2.28990006447, 5.92703444828 2.28972572372, 5.91099977493 2.29010009766, 5.90280970537 2.28811964376, 5.88920021057 2.28819990158, 5.88089990616 2.28789997101, 5.8763999939 2.28740000725, 5.86059999466 2.28480005264, 5.85552648963 2.28217021151, 5.81926751779 2.27549490601, 5.79137429376 2.28188713565, 5.75670003891 2.30220007896, 5.74240016937 2.30349993706, 5.73190055872 2.3037821644, 5.72800016403 2.30460000038, 5.71220016479 2.30679988861, 5.68359994888 2.30279994011, 5.67117668489 2.29309882193, 5.63236980267 2.28201983058, 5.60580015182 2.29679989815, 5.59943742371 2.29734014328, 5.59849977493 2.29809999466, 5.55380010605 2.30399990082, 5.39930009842 2.30769991875, 5.25960016251 2.31139993668, 4.96817257147 2.3192636659, 4.94621578366 2.32030089463, 4.92749977112 2.3248000145, 4.89860010147 2.32649993896, 4.88441760123 2.30410699626, 4.87739992142 2.3001999855, 4.87559986115 2.2974998951, 4.87680006027 2.26239991188, 4.87680006027 2.25521911239, 4.87541658765 2.21936174127, 4.87309566216 2.17536896007, 4.86910009384 2.11779999733, 4.8656001091 2.03180003166, 4.86140012741 1.93630003929, 4.85550022125 1.79670000076, 4.85300016403 1.74769997597, 4.85125210005 1.69737863443, 4.84329986572 1.5406999588, 4.84259986877 1.46889996529, 4.84624557879 1.38791176227, 4.8255106815 1.37020687419, 4.53539991379 1.37530004978, 4.27850008011 1.37919998169, 4.14448361576 1.38122832947, 4.05527608953 1.38314678789, 3.98329997063 1.40199995041, 3.63750004768 1.40369999409, 3.60726337899 1.38428582786, 3.60409998894 1.38370001316, 3.60404224663 1.38221762385, 3.60089993477 1.38020002842, 3.60001623773 1.36601462819, 3.59699988365 1.36020004749, 3.59703841414 1.35999180424, 3.59109997749 1.35130000114, 3.59489892504 1.28386981423, 3.59027042776 1.2095716286, 3.58559989929 1.19140005112, 3.58828196647 1.17765218324, 3.58369994164 1.10409998894, 3.58100008965 1.04439997673, 3.58277164116 0.99682191545, 3.57899999619 0.99225997925, 3.50684346041 0.9957231443, 3.46180009842 1.01110005379, 3.45535037593 1.02349807888, 3.45650005341 1.05320000648, 3.46169996262 1.16219997406, 3.47620010376 1.25569999218, 3.46259999275 1.37430000305, 3.45796476467 1.37854434076, 3.44759988785 1.38960003853, 3.43745331188 1.39030919593, 3.43145885838 1.39087672566, 3.4305999279 1.39110004902, 3.42816302158 1.39112446631, 3.1835000515 1.39750003815, 3.03410005569 1.40569996834, 2.83209991455 1.40380001068, 2.67880010605 1.4129999876, 2.50819993019 1.42620003223, 2.35349988937 1.42589998245, 2.27135137847 1.4103012576, 2.24252149128 1.41454095804, 2.23580002785 1.41770005226, 2.0678999424 1.41499996185, 2.01950001717 1.4129999876, 2.00687597976 1.41365073757, 1.9986000061 1.42180001736, 1.8545999527 1.42279994488, 1.75769996643 1.42869997025, 1.38569998741 1.4306999445, 1.09109997749 1.43589997292, 0.93633002043 1.43540000916, 0.7690500021 1.43949997425, 0.59990000725 1.43970000744, 0.54724001884 1.44040000439, 0.29003998637 1.45050001144, 0.13759000599 1.45749998093, -0.07371199875999999 1.45309996605, -0.2885299921 1.44560003281, -0.41571000218 1.44500005245, -0.56634002924 1.44799995422, -0.7175899744000001 1.44729995728, -0.92211997509 1.43519997597, -0.9574093154 1.43611580417, -0.95774000883 1.43669998646, -0.9578499794000001 1.54680001736, -0.96170002222 1.58749997616, -0.96359593892 1.63773781102, -0.95300000906 1.68060004711, -0.95792001486 1.9103000164, -0.97268644121 1.93204954965, -0.97446000576 1.94369995594, -0.97570002079 1.94780004025, -0.9780989929 1.94949111856, -0.98935997486 1.96959996223, -0.99867999554 1.97630000114, -1.00231038191 1.97690690714, -1.00479996204 1.97930002213, -1.01230470995 1.98274941558, -1.01510000229 1.98590004444, -1.03059995174 1.99660003185, -1.04330003262 1.99880003929, -1.17999994755 2.00060009956, -1.2526999712 1.99839997292, -1.25338757306 1.99557208776, -1.25590002537 1.99539995193, -1.25552313054 1.98678922708, -1.25566414438 1.98620928254, -1.2718000412 1.98409998417, -1.27358077134 1.98033787445, -1.29896453993 1.97131081969, -1.29950924043 1.97137419372, -1.31741847993 1.98587209303, -1.31809997559 1.99409997463, -1.32005982119 1.99516512136, -1.32009994984 1.99549996853, -1.32081669565 1.99580714531, -1.32109999657 1.99989998341, -1.36170005798 2.00789999962, -1.42272405525 2.01423185699, -1.42599999905 2.01620006561, -1.44204682331 2.01617145352, -1.49380004406 2.02049994469, -1.54085533099 2.01599527426, -1.67706594262 2.01575240564, -1.75325275643 2.01705815703, -1.85819995403 2.02010011673, -1.94360005856 2.02519989014, -2.19150039773 2.02209922396, -2.22849988937 2.02250003815, -2.37660002708 2.02530002594, -2.4048130792 2.02423064998, -2.41199994087 2.0243999958, -2.43798462511 2.00805851722, -2.45060396612 2.0098086361, -2.4577999115 2.02279996872, -2.47099995613 2.01950001717, -2.48579317756 2.01468886744, -2.49020004272 2.01530003548, -2.51839995384 2.00559997559, -2.52410006523 2.00009989738, -2.52438591695 1.99722444154, -2.53090000153 1.99469995499, -2.52730324263 1.96787831382, -2.52749991417 1.96589994431, -2.52763633013 1.94526732831, -2.52777177165 1.94405720314, -2.53593726157 1.92747894214, -2.55679988861 1.92439997196, -2.55915004105 1.92495118189, -2.56552607121 1.92866634341, -2.5680000782 1.93040001392, -2.59532059654 1.93595838746, -2.59080004692 1.95140004158, -2.58416299132 1.97227284875, -2.58345601602 1.97325833386, -2.56539988518 1.97430002689, -2.56735141634 1.99614058805, -2.56730008125 1.99650001526, -2.56738492761 1.99651562947, -2.5680000782 2.00340008736, -2.59792152407 2.00603718502, -2.60109996796 2.0093998909, -2.60773817467 2.00690236601, -2.62700009346 2.00859999657, -2.65956698126 1.99903052131, -2.66409993172 1.99880003929, -2.67969989777 1.99670004845, -2.6794960766 1.996326899, -2.68029999733 1.99619996548, -2.67689990997 1.96850001812, -2.66725537304 1.9440473554, -2.6651374162 1.93268105996, -2.72119998932 1.93019998074, -2.72300004959 2.016299963, -2.7349998951 2.05290007591, -2.74160003662 2.14919996262, -2.75500011444 2.25110006332, -2.76410007477 2.29769992828, -2.7678000927 2.31830000877, -2.77020689275 2.32138806242, -2.7702999115 2.32179999352, -2.77300595171 2.32497940528, -2.77309989929 2.32509994507, -2.77310768179 2.32509893115, -2.77430009842 2.32649993896, -2.786226236 2.32887585873, -2.79559993744 2.33500003815, -2.80300712925 2.33369570273, -2.80399990082 2.33489990234, -2.80920004845 2.33640003204, -2.8180000782 2.33669996262, -3.19029998779 2.3327999115, -3.38520002365 2.32820010185, -3.55369997025 2.3382999897, -3.796200037 2.32319998741, -3.99020004272 2.32430005074, -4.26000022888 2.31719994545, -4.5110001564 2.3110499382, -4.68951682906 2.30667591769, -4.7297000885 2.31030011177, -4.81050014496 2.30029988289, -4.92100000381 2.29929995537, -4.94299983978 2.28029990196, -4.93923885153 2.25254791269, -4.93909978867 2.2392001152, -4.93695483 2.23472244845, -4.93839979172 2.23040008545, -4.93475904491 2.21949182814, -4.93349981308 2.21020007133, -4.93300008774 1.92359995842, -4.94896411314 1.91019710947, -4.95601026722 1.90784435459, -5.12203841766 1.90570176485, -5.14879989624 1.90690004826, -5.20860004425 1.93429994583, -5.25488921443 1.90398736906, -5.40659466727 1.90202969663, -5.41440010071 1.90380001068, -5.42189979553 1.90170001984, -5.42386093772 1.89870862027, -5.42390012741 1.89869999886, -5.44070005417 1.88600003719)';\nexports.default = { exterior: exports.exterior, interior: exports.interior };\n"],"sourceRoot":""}